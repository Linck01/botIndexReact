{"version":3,"sources":["ui-component/cards/GameCard1.js","../node_modules/@material-ui/icons/PlayCircleOutline.js","../node_modules/@material-ui/core/CardMedia/cardMediaClasses.js","../node_modules/@material-ui/core/CardMedia/CardMedia.js","views/NewGames/index.js"],"names":["useStyles","makeStyles","theme","followerBlock","background","palette","mode","dark","main","grey","border","borderColor","textAlign","profileAvatar","margin","btnProfile","width","borderRadius","transition","height","active","success","light","color","reject","error","customerHeadDetails","verticalAlign","marginRight","marginTop","UserProfileCard","props","game","colors","useColors","classes","_jsxs","Card","className","sx","boxShadow","children","_jsx","CardMedia","component","image","bannerUrl","title","CardContent","p","pb","Grid","container","spacing","item","xs","Tooltip","length","Typography","variant","fct","cutString","style","paddingTop","currencyName","isEnded","Chip","label","size","alignItems","fontSize","primaryMain","IconUsers","infoDark","memberCount","IconCertificate","warningDark","betCount","Link","to","assembleGameOrBetUri","Button","startIcon","PlayCircleIcon","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardMediaRoot","experimentalStyled","name","overridesResolver","styles","styleProps","isMediaComponent","isImageComponent","_extends","root","media","img","_ref","display","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useThemeProps","_props$component","src","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","concat","slots","composeClasses","useUtilityClasses","clsx","as","undefined","NewGamesPage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","games","setGames","_useState5","index","maxIndex","_useState6","page","setPage","dispatch","useDispatch","getGames","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","config","apiHost","params","isPublic","sortBy","limit","sent","data","results","_objectSpread","totalPages","t0","console","log","abrupt","type","SNACKBAR_OPEN","open","message","toString","alertSeverity","close","stop","apply","arguments","handlePageChange","_ref2","_callee2","a","b","c","_context2","_x","_x2","_x3","useEffect","_Fragment","Helmet","content","lg","CircularProgress","gridSpacing","map","GameCard1","id","direction","Pagination","onChange","count"],"mappings":"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","file":"static/js/23.aad57738.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Card, CardContent, CardMedia, Chip, Grid, Typography, Tooltip } from '@material-ui/core';\r\nimport useColors from '../../hooks/useColors';\r\nimport { IconUsers, IconCertificate } from '@tabler/icons';\r\nimport PlayCircleIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport fct from '../../utils/fct.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    followerBlock: {\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n        border: theme.palette.mode === 'dark' ? 'none' : '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        textAlign: 'center'\r\n    },\r\n    profileAvatar: {\r\n        margin: 'auto auto 0'\r\n    },\r\n    btnProfile: {\r\n        width: '100%',\r\n        borderRadius: '4px',\r\n        transition: 'all .3s ease-in-out',\r\n        '& svg': {\r\n            width: '20px',\r\n            height: '20px',\r\n            margin: '4px 0px',\r\n            transition: 'all .3s ease-in-out'\r\n        }\r\n    },\r\n    active: {\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.success.light,\r\n        color: theme.palette.success.main\r\n    },\r\n    reject: {\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.error.light,\r\n        color: theme.palette.error.dark\r\n    },\r\n    customerHeadDetails: {\r\n        '& > svg': {\r\n            width: '15px',\r\n            height: '15px',\r\n            verticalAlign: 'text-top',\r\n            marginRight: '5px',\r\n            marginTop: '2px',\r\n        }\r\n    },\r\n}));\r\n\r\nconst UserProfileCard = (props) => {\r\n    const { game } = props;\r\n    const { colors } = useColors();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.followerBlock} sx={{ boxShadow: 8 }}>\r\n            <CardMedia component=\"img\" image={ game.bannerUrl } title=\"banner\" sx={{ height: '125px' }} />\r\n            <CardContent sx={{ p: 2, pb: '16px !important' }}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Tooltip title={game.title.length >= 32 ? game.title : ''}>\r\n                                    <Typography className={classes.profileAvatar} variant=\"h4\">{fct.cutString(game.title,32)}</Typography>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={4} style={{paddingTop: '12px'}}>\r\n                        {game.currencyName}\r\n\r\n                        {!game.isEnded ? (\r\n                            <Chip label=\"Active\" size=\"small\" className={classes.active} />\r\n                        ) : (\r\n                            <Chip label=\"Ended\" size=\"small\" className={classes.reject} />\r\n                        )} \r\n                    </Grid>\r\n                    <Grid item xs={8} alignItems=\"center\">  \r\n                        <Grid container spacing={1}>\r\n                            {/*}<Grid item xs={12} sm={12}>\r\n                                <Typography variant=\"body2\">{game.desc}</Typography>\r\n                            </Grid>{*/}\r\n                            <Grid item xs={6}>\r\n                                <Typography variant=\"body2\" style={{fontSize:'1.6em', color: colors.primaryMain}} className={classes.customerHeadDetails}>\r\n                                    <IconUsers  style={{width: '1em',height: '1em', color: colors.infoDark}} /> {game.memberCount}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography variant=\"body2\" style={{fontSize:'1.6em', color: colors.primaryMain}} className={classes.customerHeadDetails}>\r\n                                    <IconCertificate  style={{width: '1.1em',height: '1.1em', color: colors.warningDark}} /> {game.betCount}\r\n                                </Typography>\r\n                            </Grid><br /><br /><br />\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={12}>\r\n                        <Link to={'/game/' + fct.assembleGameOrBetUri(game)}>\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.btnProfile} sx={{ boxShadow: 4 }} startIcon={<PlayCircleIcon />}>\r\n                                Play\r\n                            </Button>\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default UserProfileCard;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'PlayCircleOutline');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = styleProps;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = styleProps;\n    return _extends({}, styles.root, isMediaComponent && styles.media, isImageComponent && styles.img);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, styleProps.isMediaComponent && {\n  width: '100%'\n}, styleProps.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const styleProps = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    style: composedStyle,\n    styleProps: styleProps,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardMedia;","import React, {useState, useEffect } from 'react';\r\nimport { Typography, Grid, CircularProgress, Pagination } from '@material-ui/core';\r\nimport GameCard1 from '../../ui-component/cards/GameCard1';\r\nimport { gridSpacing } from '../../store/constant';\r\nimport { SNACKBAR_OPEN } from '../../store/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from '../../utils/axios';\r\nimport config from '../../config';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst NewGamesPage = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [games, setGames] = useState([]);\r\n    const [page, setPage] = useState({index: 1, maxIndex: 1});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getGames = async () => {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await axios.get(config.apiHost + '/v1/games/', {params: {isEnded: false, isPublic: true ,sortBy: '-_createdAt', limit: 9 , page: page.index } });\r\n\r\n            setGames(response.data.results);\r\n            setPage({...page, maxIndex: response.data.totalPages});\r\n            setIsLoading(false);\r\n        } catch (e) {\r\n            setIsLoading(false);\r\n            console.log(e);\r\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\r\n                variant: 'alert', alertSeverity: 'error', close: true });\r\n        }\r\n    }\r\n\r\n    const handlePageChange = async (a,b,c) => {\r\n        setPage({...page, index: b});\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGames();\r\n    }, [page.index]);\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <title>New Games</title>\r\n            <meta name='description' content='Games that have been recently created.' />\r\n            <meta name='keywords' content='new games,new,recent games,recent,recently,created, recently created' />\r\n        </Helmet>\r\n\r\n        {isLoading ? (\r\n            <><br /><br />\r\n            <Grid item xs={12} lg={12} style={{ textAlign: 'center' }}>\r\n                <CircularProgress color=\"secondary\" size=\"10em\"  />\r\n            </Grid>\r\n            </>\r\n        ) : ''}    \r\n        \r\n        {!isLoading && games.length > 0 ? (\r\n            <>\r\n            <Grid container spacing={gridSpacing}>\r\n                {games.map( (game) => {\r\n                    return (\r\n                        <Grid item xs={12} lg={4} key={game.id}>              \r\n                            <GameCard1 game={game} />     \r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n            <br />\r\n            <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Pagination page={page.index} onChange={handlePageChange} count={page.maxIndex} color=\"primary\" />\r\n                </Grid>\r\n            </Grid>\r\n            </>\r\n        ) : ''}\r\n\r\n        {!isLoading && games.length === 0 ? (\r\n            <><br />\r\n            <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                <Typography variant=\"h3\">No games to show.</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            </>\r\n        ) : ''}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewGamesPage;\r\n"],"sourceRoot":""}