{"version":3,"sources":["views/game/Members/MemberTable.js","views/game/Members/index.js"],"names":["useStyles","makeStyles","theme","aaa","CustomizedTimeline","props","membersPage","game","React","useContext","GameContext","console","log","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","currencyName","TableBody","items","map","member","index","hover","username","currency","$numberDecimal","fct","formatDateTime","_createdAt","id","Members","socket","privileges","setMembersPage","dispatch","useAuth","user","useDispatch","useState","isLoading","setIsLoading","getMembersPage","a","axios","get","config","apiHost","params","gameId","sortBy","limit","page","response","addUsernamesToArray","data","results","sleep","maxIndex","totalPages","type","SNACKBAR_OPEN","open","message","toString","variant","alertSeverity","close","handlePageChange","b","c","useEffect","Grid","container","justifyContent","CircularProgress","color","size","length","direction","spacing","alignItems","item","xs","Pagination","onChange","count","Typography"],"mappings":"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","file":"static/js/32.a8254e86.chunk.js","sourcesContent":["import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Grid, Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,  } from '@material-ui/core';\n\nimport GameContext from '../../../contexts/GameContext';\n// assets\nimport FastfoodIcon from '@material-ui/icons/FastfoodTwoTone';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMacTwoTone';\nimport HotelIcon from '@material-ui/icons/HotelTwoTone';\nimport RepeatIcon from '@material-ui/icons/RepeatTwoTone';\nimport fct from '../../../utils/fct.js';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    aaa: {\n       \n    }\n}));\n\n//==============================|| UI TIMELINE - CUSTOMIZED ||==============================//\n\nexport default function CustomizedTimeline( props ) {\n    const { membersPage } = props;\n    const classes = useStyles();\n    const { game } = React.useContext(GameContext);\n    console.log('AAAAAAAAAAAAA', membersPage);\n    return (\n        <>\n        <TableContainer>\n            <Table stickyHeader>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align='center'>Title</TableCell>\n                        <TableCell align='center'>{game.currencyName}</TableCell>\n                        <TableCell align='center'>Playing since</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {membersPage.items.map((member, index) => (\n                        <TableRow hover key={member.id}>\n                            <TableCell align='center'>{member.username}</TableCell>\n                            <TableCell align='center'>{member.currency.$numberDecimal}</TableCell>\n                            <TableCell align='center'>{fct.formatDateTime(member._createdAt)}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n        </>\n    );\n}\n","import React, {useState, useEffect, useRef, useContext} from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport GameContext from '../../../contexts/GameContext';\nimport fct from '../../../utils/fct.js';\nimport MemberTable from './MemberTable';\n\nimport { Divider, Typography, CardMedia, Stack, Switch, Pagination, Grid, Button, InputAdornment, OutlinedInput, CircularProgress, Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { useDispatch, useSelector } from 'react-redux';\n// project imports\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { gridSpacing } from '../../../store/constant';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport useAuth from '../../../hooks/useAuth';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\n// project imports\n\n\n//-----------------------|| PROFILE 1 - PROFILE ||-----------------------//\n\n\n\n\n\nconst Members = () => {\n    const { game, socket, privileges, membersPage, setMembersPage  } = useContext(GameContext);\n    const { user } = useAuth();\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(false);\n\n    const getMembersPage = async () => {\n        setIsLoading(true);\n\n        try {\n            const response = await axios.get(config.apiHost + '/v1/members/', { params: { gameId: game.id, sortBy: '-currency', limit: 10 , page: membersPage.index } });\n            await fct.addUsernamesToArray(response.data.results);\n\n            await fct.sleep(500);\n            setMembersPage({...membersPage, items: response.data.results,maxIndex: response.data.totalPages});\n\n\n\n            setIsLoading(false);\n        } catch (e) {\n            setIsLoading(false);\n            console.log(e);\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\n                variant: 'alert', alertSeverity: 'error', close: true });\n        }\n    }\n\n    const handlePageChange = async (a,b,c) => {\n        console.log(a,b,c);\n        setMembersPage({...membersPage, index: b});\n    }\n\n    useEffect(() => {\n        getMembersPage();\n    }, [membersPage.index]);\n\n    return (\n        <>  \n        \n        {isLoading ? (         \n            <>\n            <br />\n            <Grid container justifyContent=\"center\">     \n                <CircularProgress color=\"secondary\" size=\"10em\"  /> \n            </Grid>\n            </>       \n        ) : ''} \n        \n        {!isLoading && membersPage.items.length > 0 ? (\n            <>\n            <MemberTable membersPage={membersPage} />  \n            <br />\n            </>\n        ) : ''}\n\n        {!isLoading && membersPage.maxIndex > 1 ? (\n            <>\n            <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\n                <Grid item xs={12}>\n                    <Pagination page={membersPage.index} onChange={handlePageChange} count={membersPage.maxIndex} color=\"primary\" />\n                </Grid>\n            </Grid>\n            </>\n        ) : ''}\n\n        {!isLoading && membersPage.items.length == 0 ? (\n            <>  \n                <br />\n                <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\n                    <Grid item xs={12}>\n                       <Typography variant=\"h3\">No Members to show.</Typography>\n                    </Grid>\n                </Grid>\n            </>\n           \n        ) : ''}\n\n  \n        \n\n        </>\n    );\n};\n\nexport default Members;\n"],"sourceRoot":""}