{"version":3,"sources":["views/game/Settings/CurrencyNameSelect.js","views/game/Settings/AdvancedSettings.js","views/game/Settings/MainSettings.js","views/game/Settings/DeleteGameDialog.js","views/game/Settings/TopUpStartCurrencyDialog.js","views/game/Settings/index.js"],"names":["CurrencyNameSelect","props","currencyName","setCurrencyName","_React$useState","React","useState","_React$useState2","_slicedToArray","anchorElEmoji","setAnchorElEmoji","emojiOpen","Boolean","emojiId","undefined","_jsxs","Grid","container","spacing","gridSpacing","alignItems","children","item","xs","_jsx","IconButton","ref","size","onClick","event","currentTarget","MoodTwoToneIcon","Popper","position","id","open","anchorEl","disablePortal","popperOptions","modifiers","name","options","offset","ClickAwayListener","onClickAway","MainCard","elevation","content","Picker","onEmojiClick","emojiObject","emoji","skinTone","SKIN_TONE_MEDIUM_DARK","disableAutoFocus","TextField","style","width","fullWidth","label","variant","value","onChange","e","target","Settings","startCurrency","setStartCurrency","isPublic","setIsPublic","isEnded","setIsEnded","_Fragment","Typography","md","FormControlLabel","control","Switch","checked","color","WidgetStatistics","title","setTitle","desc","setDesc","bannerUrl","setBannerUrl","language","setLanguage","minRows","multiline","select","Object","keys","languages","map","key","index","MenuItem","DeleteGameDialog","game","useContext","GameContext","setOpen","_useState","_useState2","isLoading","setIsLoading","dispatch","useDispatch","user","useAuth","history","useHistory","handleClose","deleteGame","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","type","SNACKBAR_OPEN","message","alertSeverity","close","axios","delete","config","apiHost","push","t0","response","data","toString","stop","apply","arguments","justifyContent","Button","sx","boxShadow","Dialog","onClose","DialogTitle","fontSize","fontWeight","DialogContent","DialogContentText","DialogActions","pr","CircularProgress","patch","gameId","$numberDecimal","GameSettings","_React$useContext","setGame","_React$useState3","_React$useState4","password","setPassword","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","_React$useState11","_React$useState12","_React$useState13","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","_React$useState19","_React$useState20","updateSettings","obj","gameHosts","serverId","sent","Helmet","MainSettings","AdvancedSettings","TopUpStartCurrencyDialog"],"mappings":"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","file":"static/js/30.259f771d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\r\nimport { ClickAwayListener, Grid, IconButton, Popper, TextField } from '@material-ui/core';\r\nimport { gridSpacing } from '../../../store/constant';\r\nimport MoodTwoToneIcon from '@material-ui/icons/MoodTwoTone';\r\nimport MainCard from './../../../ui-component/cards/MainCard';\r\n\r\nconst CurrencyNameSelect = (props) => {\r\n    const { currencyName, setCurrencyName } = props;\r\n    \r\n    // handle emoji\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setCurrencyName(currencyName + emojiObject.emoji);\r\n    };\r\n\r\n    const [anchorElEmoji, setAnchorElEmoji] = React.useState(null);\r\n    const handleOnEmojiButtonClick = (event) => {\r\n        setAnchorElEmoji(anchorElEmoji ? null : event.currentTarget);\r\n    };\r\n\r\n    const emojiOpen = Boolean(anchorElEmoji);\r\n    const emojiId = emojiOpen ? 'simple-popper' : undefined;\r\n    const handleCloseEmoji = () => {\r\n        setAnchorElEmoji(null);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing} alignItems=\"center\">\r\n            <Grid item xs={1}>\r\n                <IconButton\r\n                    ref={anchorElEmoji}\r\n                    aria-describedby={emojiId}\r\n                    size=\"small\"\r\n                    onClick={handleOnEmojiButtonClick}\r\n                >\r\n                    <MoodTwoToneIcon />\r\n                </IconButton>\r\n                <Popper\r\n                    position=\"top\"\r\n                    id={emojiId}\r\n                    open={emojiOpen}\r\n                    anchorEl={anchorElEmoji}\r\n                    disablePortal\r\n                    popperOptions={{\r\n                        modifiers: [\r\n                            {\r\n                                name: 'offset',\r\n                                options: {\r\n                                    offset: [-20, 20]\r\n                                }\r\n                            }\r\n                        ]\r\n                    }}\r\n                >\r\n                    <ClickAwayListener onClickAway={handleCloseEmoji}>\r\n                        <MainCard elevation={8} content={false}>\r\n                            {' '}\r\n                            <Picker\r\n                                onEmojiClick={onEmojiClick}\r\n                                skinTone={SKIN_TONE_MEDIUM_DARK}\r\n                                disableAutoFocus={true}\r\n                            />\r\n                        </MainCard>\r\n                    </ClickAwayListener>\r\n                </Popper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <TextField\r\n                    style={{width: '100%'}}\r\n                    fullWidth\r\n                    label=\"Name/Symbol\"\r\n                    variant=\"outlined\"\r\n                    value={currencyName}\r\n                    onChange={(e) => setCurrencyName(e.target.value)}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CurrencyNameSelect;\r\n","import React from 'react';\nimport { FormControlLabel, Grid, Switch, Typography, TextField } from '@material-ui/core';\nimport CurrencyNameSelect from './CurrencyNameSelect';\nimport { gridSpacing } from '../../../store/constant';\n\nconst Settings = (props) => {\n    const { startCurrency, setStartCurrency, isPublic, setIsPublic, currencyName, setCurrencyName, isEnded, setIsEnded} = props;\n\n    return (\n        <>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\">Accessibility</Typography>\n                </Grid>\n                <Grid item xs={6} md={6}>\n                    <FormControlLabel\n                        control={ <Switch checked={isPublic} onChange={() => setIsPublic(!isPublic)} name=\"isPublic\" color=\"primary\" /> }\n                        label=\"Public\"\n                    />\n                </Grid>\n                <Grid item xs={6} md={6}>\n                    <FormControlLabel\n                        control={ <Switch checked={isEnded} onChange={() => setIsEnded(!isEnded)} name=\"isEnded\" color=\"primary\" /> }\n                        label=\"Ended\"\n                    />\n                </Grid>\n                {/*}\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        style={{width: '100%'}}\n                        fullWidth\n                        label=\"Password\"\n                        variant=\"outlined\"\n                        value={password}\n                        onChange={(e) => setStartCurrency(e.target.value)}\n                    />\n                </Grid>\n                {*/}\n            </Grid> \n            <br /><br />\n            <Grid container spacing={gridSpacing}>      \n                <Grid item xs={12}>\n                    <Typography variant=\"h3\">Currency</Typography>\n                    <br />\n                </Grid>\n                \n                <Grid item xs={12} md={6}>\n                    <CurrencyNameSelect currencyName={currencyName} setCurrencyName={setCurrencyName}/>\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                    <Grid item xs={12}>\n                        <TextField\n                            style={{width: '100%'}}\n                            fullWidth\n                            label=\"Start amount\"\n                            variant=\"outlined\"\n                            value={startCurrency}\n                            onChange={(e) => setStartCurrency(e.target.value)}\n                        />\n                    </Grid>   \n                </Grid>               \n            </Grid>\n        </>\n    );\n};\n\nexport default Settings;\n\n\n","import React from 'react';\r\nimport { Grid, Typography, TextField, MenuItem } from '@material-ui/core';\r\nimport { gridSpacing } from '../../../store/constant';\r\nimport languages from '../../../utils/locales/languages.json';\r\n\r\nconst WidgetStatistics = (props) => {\r\n    const { title, setTitle, desc, setDesc, bannerUrl, setBannerUrl, language, setLanguage } = props;\r\n    \r\n    return (\r\n        <>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">\r\n                        Main\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                            minRows=\"3\"\r\n                            multiline\r\n                            value={desc}\r\n                            onChange={(e) => setDesc(e.target.value)}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"Banner Url\"\r\n                            variant=\"outlined\"\r\n                            value={bannerUrl}\r\n                            onChange={(e) => setBannerUrl(e.target.value)}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                    id=\"outlined-select-currency\"\r\n                    select\r\n                    fullWidth\r\n                    label=\"Language\"\r\n                    value={language}\r\n                    onChange={(e) => setLanguage(e.target.value)}\r\n                    variant=\"outlined\" >\r\n                    {Object.keys(languages).map((key, index) => (\r\n                        <MenuItem key={key} value={key}>\r\n                            {languages[key][0]}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </TextField>\r\n                </Grid>\r\n            </Grid> \r\n        \r\n            {/*}\r\n            <Grid container spacing={gridSpacing}>      \r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">Currency</Typography>\r\n                    <br />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={6}>\r\n                    \r\n                </Grid>             \r\n            </Grid>\r\n           {*/}\r\n            \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default WidgetStatistics;\r\n","\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, Grid, CircularProgress } from '@material-ui/core';\nimport React, {useState, useContext} from 'react';\nimport GameContext from '../../../contexts/GameContext';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport useAuth from '../../../hooks/useAuth';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\n\n\n//===============================|| UI DIALOG - FORMS ||===============================//\n\nexport default function DeleteGameDialog(props) {\n    const { game } = useContext(GameContext);\n    const [open, setOpen] = React.useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n    const { user } = useAuth();\n    const history = useHistory();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteGame = async () => {\n        setIsLoading(true);\n\n        if (!user) {\n            setIsLoading(false);\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message: 'Please log in to delete the game!',\n                variant: 'alert', alertSeverity: 'error', close: true });\n        }\n        \n        try {\n            await axios.delete(config.apiHost + '/v1/games/' + game.id, {});\n            history.push('/games/hosted');\n            //handleClose();\n        } catch (e) {\n            setIsLoading(false);\n\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\n                variant: 'alert', alertSeverity: 'error', close: true });\n         }\n\n        setIsLoading(false);\n        dispatch({ type: SNACKBAR_OPEN, open: true, message: 'Successfully deleted game.', \n                variant: 'alert', alertSeverity: 'success', close: true });\n    };\n\n    return (\n        <Grid container justifyContent=\"center\">\n            <Button style={{width:'100%'}} variant=\"contained\" sx={{ boxShadow: 4 }} color=\"error\" onClick={handleClickOpen}>\n                Delete game\n            </Button>\n\n            <Dialog fullWidth={true} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" >\n                <DialogTitle id=\"form-dialog-title\">\n                    <Typography style={{fontSize:'1.7em',fontWeight: 'bold'}}>Delete game</Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Are you sure you want to delete the game? This will <br />\n                        - Remove the game.<br />\n                        - Remove all bets associated with the game.<br />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions sx={{ pr: 2.5 }}>\n                    <Button onClick={handleClose} color=\"error\">\n                        Cancel\n                    </Button>\n                    <Button variant=\"contained\" size=\"small\" onClick={deleteGame} color=\"primary\">\n                        {isLoading ? (<> <CircularProgress color=\"secondary\"  size=\"1.7em\" /></>) : ('Accept') }  \n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Grid>\n    );\n}\n","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, Grid, CircularProgress } from '@material-ui/core';\nimport React, {useState, useContext} from 'react';\nimport GameContext from '../../../contexts/GameContext';\nimport { useDispatch } from 'react-redux';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport useAuth from '../../../hooks/useAuth';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\n\nexport default function DeleteGameDialog(props) {\n    const { game } = useContext(GameContext);\n    const [open, setOpen] = React.useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n    const { user } = useAuth();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteGame = async () => {\n        setIsLoading(true);\n\n        if (!user) {\n            setIsLoading(false);\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message: 'Please log in to edit member currency of the game!',\n                variant: 'alert', alertSeverity: 'error', close: true });\n        }\n        \n        try {\n            await axios.patch(config.apiHost + '/v1/members/topUpStartCurrency', {gameId: game.id});\n            handleClose();\n        } catch (e) {\n            setIsLoading(false);\n\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\n                variant: 'alert', alertSeverity: 'error', close: true });\n         }\n\n        setIsLoading(false);\n        dispatch({ type: SNACKBAR_OPEN, open: true, message: 'Successfully deleted game.', \n                variant: 'alert', alertSeverity: 'success', close: true });\n    };\n\n    return (\n        <Grid container justifyContent=\"center\">\n            <Button style={{width:'100%'}} variant=\"contained\" sx={{ boxShadow: 4 }} color=\"primary\" onClick={handleClickOpen}>\n                Top-up currency of broke members\n            </Button>\n\n            <Dialog fullWidth={true} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" >\n                <DialogTitle id=\"form-dialog-title\">\n                    <Typography style={{fontSize:'1.7em',fontWeight: 'bold'}}>Top-up currency of broke members</Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Are you sure you want to reset the currency of members, who currently own less than {game.startCurrency.$numberDecimal + ' ' + game.currencyName} back to {game.startCurrency.$numberDecimal + ' ' + game.currencyName}? Be aware: <br />\n                        - Currency that is spent on active bets will not be counted.<br />\n                        - Thus you might want to do this only when there is no open unpaid bets.<br />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions sx={{ pr: 2.5 }}>\n                    <Button onClick={handleClose} color=\"error\">\n                        Cancel\n                    </Button>\n                    <Button variant=\"contained\" size=\"small\" onClick={deleteGame} color=\"primary\">\n                        {isLoading ? (<> <CircularProgress color=\"secondary\"  size=\"1.7em\" /></>) : ('Accept') }  \n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport AdvancedSettings from './AdvancedSettings';\nimport MainSettings from './MainSettings';\nimport DeleteGameDialog from './DeleteGameDialog';\nimport TopUpStartCurrencyDialog from './TopUpStartCurrencyDialog';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from \"react-helmet\";\nimport GameContext from '../../../contexts/GameContext';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\nimport { Button, CircularProgress } from '@material-ui/core';\n\n\n//-----------------------|| PROFILE 1 - PROFILE ||-----------------------//\n\nconst GameSettings = () => {\n    const { game, setGame } = React.useContext(GameContext);\n    const dispatch = useDispatch();\n\n    const [ startCurrency, setStartCurrency ] =  React.useState(game.startCurrency.$numberDecimal);\n    const [ password, setPassword ] = React.useState('');\n    const [ title, setTitle ] = React.useState(game.title);\n    const [ currencyName, setCurrencyName ] = React.useState(game.currencyName);\n    const [ desc, setDesc ] = React.useState(game.desc);\n    const [ isPublic, setIsPublic ] = React.useState(game.isPublic);\n    const [ isEnded, setIsEnded ] = React.useState(game.isEnded);\n    const [ bannerUrl, setBannerUrl ] = React.useState(game.bannerUrl);\n    const [ language, setLanguage ] = React.useState(game.language);\n\n    const [ isLoading, setIsLoading ] = React.useState(false);\n\n    const updateSettings = async () => {\n        setIsLoading(true);\n\n        try {\n            const obj = { title, desc, isPublic, isEnded, startCurrency, currencyName, bannerUrl, language };\n            const response = await axios.patch(config.gameHosts[game.serverId] + '/v1/games/' + game.id, obj);\n            \n            dispatch({ type: SNACKBAR_OPEN, open: true, message: 'Successfully changed settings', \n                variant: 'alert', alertSeverity: 'success', close: true });\n            \n            setGame(response.data);\n            setIsLoading(false);\n        } catch (e) { \n            setIsLoading(false);\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\n                variant: 'alert', alertSeverity: 'error', close: true });\n         }\n\n    };\n   \n    return (\n        <>\n        <Helmet>\n            <title>{game.title} - Settings</title>\n        </Helmet>\n\n        <MainSettings title={title} setTitle={setTitle} desc={desc} setDesc={setDesc} bannerUrl={bannerUrl} setBannerUrl={setBannerUrl} language={language} setLanguage={setLanguage} />\n        <br /><br />\n        <AdvancedSettings currencyName={currencyName} setCurrencyName={setCurrencyName} startCurrency={startCurrency} setStartCurrency={setStartCurrency} password={password} setPassword={setPassword} isPublic={isPublic} setIsPublic={setIsPublic} isEnded={isEnded} setIsEnded={setIsEnded} />\n        <br /><br />\n        <Button style={{width:'100%'}} variant=\"contained\" sx={{ boxShadow: 8 }} color=\"secondary\" onClick={updateSettings}>\n            { isLoading ? (<> <CircularProgress color=\"secondary\"  size=\"1.7em\" /></>) : ('Update') }\n        </Button>\n        <br /><br />\n        <TopUpStartCurrencyDialog />\n        <br />\n        <DeleteGameDialog /> \n        </>\n        \n    );\n};\n\nexport default GameSettings;\n"],"sourceRoot":""}