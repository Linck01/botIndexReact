{"version":3,"sources":["../node_modules/@material-ui/core/CircularProgress/circularProgressClasses.js","../node_modules/@material-ui/core/CircularProgress/CircularProgress.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","views/user/Settings/UpdatePassword.js","views/user/Settings/index.js"],"names":["getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","_templateObject","_taggedTemplateLiteral","circularDashKeyframe","_templateObject2","CircularProgressRoot","experimentalStyled","name","overridesResolver","props","styles","styleProps","_extends","root","variant","concat","capitalize","color","_ref","theme","display","transition","transitions","create","palette","main","_ref2","css","_templateObject3","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","_templateObject4","CircularProgress","React","inProps","ref","useThemeProps","className","_props$color","_props$disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","WidgetStatistics","_React$useState","useState","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","password","setPassword","_React$useState5","_React$useState6","newPassword","setNewPassword","_React$useState7","_React$useState8","newPasswordConfirm","setNewPasswordConfirm","_React$useState9","_React$useState10","isLoading","setIsLoading","user","useAuth","dispatch","useDispatch","updateSettings","_asyncToGenerator","_regeneratorRuntime","mark","_callee","obj","wrap","_context","prev","next","Error","axios","patch","config","apiHost","id","type","SNACKBAR_OPEN","open","message","alertSeverity","close","t0","abrupt","response","data","toString","stop","apply","arguments","_jsxs","_Fragment","Grid","container","spacing","gridSpacing","item","xs","Typography","IconButton","onClick","onMouseDown","event","preventDefault","edge","Visibility","VisibilityOff","md","TextField","fullWidth","label","onChange","e","target","Button","sx","boxShadow","GameSettings","UpdatePassword"],"mappings":"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","file":"static/js/26.3a9555c6.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { keyframes, css } from '@material-ui/styled-engine';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = experimentalStyled('span', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[styleProps.variant], styles[`color${capitalize(styleProps.color)}`]);\n  }\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-block'\n}, styleProps.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, styleProps.color !== 'inherit' && {\n  color: theme.palette[styleProps.color].main\n}),\n/* Styles applied to the root element if `variant=\"indeterminate\"`. */\n({\n  styleProps\n}) => styleProps.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = experimentalStyled('svg', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  /* Styles applied to the svg element. */\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = experimentalStyled('circle', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.circle, styles[`circle${capitalize(styleProps.variant)}`], styleProps.disableShrink && styles.circleDisableShrink);\n  }\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  /* Styles applied to the `circle` svg path. */\n  stroke: 'currentColor'\n}, styleProps.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, styleProps.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  styleProps\n}) => styleProps.variant === 'indeterminate' && !styleProps.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    styleProps: styleProps,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      styleProps: styleProps,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        styleProps: styleProps,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import React from 'react';\r\nimport { Grid, Typography, TextField,IconButton } from '@material-ui/core';\r\nimport { gridSpacing } from '../../../store/constant';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n//import { strengthColor, strengthIndicator } from '../../../utils/password-strength';\r\nimport { SNACKBAR_OPEN } from '../../../store/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from '../../../utils/axios';\r\nimport config from '../../../config';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\n\r\n//===========================|| WIDGET STATISTICS ||===========================//\r\n\r\nconst WidgetStatistics = (props) => {\r\n    const [ showPassword, setShowPassword ] = React.useState(false);\r\n    //const [ passwordMatch, setPasswordMatch ] = React.useState(0);\r\n    //const [strength, setStrength] = React.useState(0);\r\n    //const [level, setLevel] = React.useState('');\r\n    const [ password, setPassword ] = React.useState('');\r\n    const [ newPassword, setNewPassword ] = React.useState('');\r\n    const [ newPasswordConfirm, setNewPasswordConfirm ] = React.useState('');\r\n    const [ isLoading, setIsLoading ] = React.useState(false);\r\n    const { user } = useAuth();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const updateSettings = async () => {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            if (newPassword !== newPasswordConfirm)\r\n                throw Error('Passwords and password confirmation do not match');\r\n\r\n            const obj = { password, newPassword };\r\n            await axios.patch(config.apiHost + '/v1/users/' + user.id, obj);\r\n\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setNewPasswordConfirm('');\r\n\r\n            dispatch({ type: SNACKBAR_OPEN, open: true, message: 'Successfully changed settings', \r\n                variant: 'alert', alertSeverity: 'success', close: true });\r\n\r\n            setIsLoading(false);\r\n        } catch (e) { \r\n            setIsLoading(false);\r\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\r\n                variant: 'alert', alertSeverity: 'error', close: true });\r\n         }\r\n\r\n    };\r\n\r\n    \r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    \r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    \r\n    /*\r\n    const checkPasswordConfirm = (pass1, pass2) => {\r\n        if (passwordMatch !== 0 || pass2.length >= pass1.length) {\r\n            if (pass1 == pass2)\r\n                setPasswordMatch(true);\r\n            else \r\n                setPasswordMatch(false);\r\n        }   \r\n    };\r\n    \r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">\r\n                        Password\r\n                        <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                        >\r\n                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"Old password\"\r\n                            variant=\"outlined\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"New password\"\r\n                            variant=\"outlined\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"Confirm new password\"\r\n                            variant=\"outlined\"\r\n                            value={newPasswordConfirm}\r\n                            onChange={(e) => setNewPasswordConfirm(e.target.value)}\r\n                        />\r\n                </Grid>       \r\n            </Grid>\r\n            <br /><br />\r\n            <Button style={{width:'100%'}} variant=\"contained\" sx={{ boxShadow: 8 }} color=\"secondary\" onClick={updateSettings}>\r\n                { isLoading ? (<> <CircularProgress color=\"secondary\"  size=\"1.7em\" /></>) : ('Change Password') }\r\n            </Button>\r\n            {/*}\r\n            <Grid container spacing={gridSpacing}>      \r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">Currency</Typography>\r\n                    <br />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={6}>\r\n                    \r\n                </Grid>             \r\n            </Grid>\r\n           {*/}\r\n            \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default WidgetStatistics;\r\n","import React from 'react';\nimport UpdatePassword from './UpdatePassword';\n\nconst GameSettings = () => {\n\n    //const [ isLoading, setIsLoading ] = React.useState(false);\n\n   \n    return (\n        <>\n        \n        <UpdatePassword />\n        <br /><br />\n        {/*}\n        <AdvancedSettings currencyName={currencyName} setCurrencyName={setCurrencyName} startCurrency={startCurrency} setStartCurrency={setStartCurrency} password={password} setPassword={setPassword} isPublic={isPublic} setIsPublic={setIsPublic} isEnded={isEnded} setIsEnded={setIsEnded} />\n        <br /><br />{*/}\n       \n        \n        </>\n        \n    );\n};\n\nexport default GameSettings;\n"],"sourceRoot":""}