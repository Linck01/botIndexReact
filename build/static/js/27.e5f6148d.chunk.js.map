{"version":3,"sources":["ui-component/cards/UserCountCard.js","views/game/Info/GameStatsCards.js","views/game/Info/GameMainInfo.js","views/game/Info/GameTopMembers.js","views/game/Info/GameTopBets.js","views/game/Info/index.js"],"names":["useStyles","makeStyles","theme","revenueCard","position","color","revenueIcon","left","bottom","transform","width","height","opacity","UserCountCard","_ref","primary","secondary","iconPrimary","classes","IconPrimary","primaryIcon","_jsx","fontSize","Card","style","background","className","children","_jsxs","CardContent","Typography","variant","Grid","container","direction","justifyContent","alignItems","spacing","item","sm","align","WidgetStatistics","props","useTheme","game","React","useContext","GameContext","colors","useColors","gridSpacing","xs","md","memberCount","toString","AccountCircleTwoTone","info","betCount","EmojiEventsTwoToneIcon","adminUsername","lg","title","desc","List","component","ListItem","button","ListItemIcon","IconCrown","sx","ListItemText","ListItemSecondaryAction","Divider","IconLanguage","languages","language","IconCalendar","fct","formatDateTime","_createdAt","topMembers","_Fragment","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","currencyName","TableBody","map","member","index","hover","username","parseFloat","currency","$numberDecimal","toFixed","id","topBets","bet","inPot","GameInfo","dispatch","useDispatch","_React$useState","useState","_React$useState2","_slicedToArray","isLoading","setIsLoading","_React$useState3","_React$useState4","setTopMembers","_React$useState5","_React$useState6","setTopBets","_React$useState7","_React$useState8","setAdminUsername","getTopMembersAndBets","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseMembers","responseBets","wrap","_context","prev","next","axios","get","config","gameHosts","serverId","params","gameId","sortBy","limit","page","sent","addUsernamesToArray","data","results","t0","console","log","abrupt","type","SNACKBAR_OPEN","open","message","response","alertSeverity","close","stop","apply","arguments","getAdminUsername","_ref2","_callee2","res","_context2","userId","init","_ref3","_callee3","_context3","useEffect","Helmet","CircularProgress","size","GameStatsCards","GameMainInfo","GameTopMembers","GameTopBets"],"mappings":"qIACA,6DAOMA,EAAYC,aAAW,SAACC,GAAK,MAAM,CACrCC,YAAa,CACTC,SAAU,WACVC,MAAO,QAEXC,YAAa,CACTF,SAAU,WACVG,KAAM,QACNC,OAAQ,QACRH,MAAO,OACPI,UAAW,gBACX,SAAU,CACNC,MAAO,QACPC,OAAQ,QACRC,QAAS,SAGpB,IAwCcC,IApCO,SAAHC,GAAoD,IAA9CC,EAAOD,EAAPC,QAASC,EAASF,EAATE,UAAWC,EAAWH,EAAXG,YAAaZ,EAAKS,EAALT,MAChDa,EAAUlB,IAEVmB,EAAcF,EACdG,EAAcH,EAAcI,cAACF,EAAW,CAACG,SAAS,UAAa,KAErE,OACID,cAACE,IAAI,CAACC,MAAO,CAAEC,WAAYpB,GAASqB,UAAWR,EAAQf,YAAYwB,SAC/DC,eAACC,IAAW,CAAAF,SAAA,CACRN,cAACS,IAAU,CAACC,QAAQ,YAAYL,UAAWR,EAAQZ,YAAYqB,SAC1DP,IAELQ,eAACI,IAAI,CAACC,WAAS,EAACC,UAAU,SAASC,eAAe,SAASC,WAAW,SAASC,QAAS,EAAEV,SAAA,CACtFN,cAACW,IAAI,CAACM,MAAI,EAACC,GAAI,GAAGZ,SACdN,cAACS,IAAU,CAACC,QAAQ,KAAKS,MAAM,SAASnC,MAAM,UAASsB,SAClDX,MAGTK,cAACW,IAAI,CAACM,MAAI,EAACC,GAAI,GAAGZ,SACdN,cAACS,IAAU,CAACC,QAAQ,QAAQS,MAAM,SAASnC,MAAM,UAASsB,SACrDZ,aAO7B,C,o3oBCNe0B,EAtCU,SAACC,GACRC,cAAd,IACQC,EAASC,IAAMC,WAAWC,KAA1BH,KACAI,EAAWC,cAAXD,OAER,OACIpB,eAACI,IAAI,CAACC,WAAS,EAACI,QAASa,IAAYvB,SAAA,CACjCN,cAACW,IAAI,CAACM,MAAI,EAACa,GAAI,EAAGC,GAAI,EAAEzB,SACpBN,cAACR,IAAa,CACVE,QAAQ,UACRC,UAAW4B,EAAKS,YAAYC,WAC5BrC,YAAasC,IACblD,MAAO2C,EAAOQ,SAWtBnC,cAACW,IAAI,CAACM,MAAI,EAACa,GAAI,EAAGC,GAAI,EAAEzB,SACpBN,cAACR,IAAa,CACVE,QAAQ,OACRC,UAAW4B,EAAKa,SAASH,WAEzBrC,YAAayC,IACbrD,MAAO2C,EAAOQ,WAOlC,E,wFCiBef,EAvDU,SAACC,GACtB,IAAQE,EAASC,IAAMC,WAAWC,KAA1BH,KACAe,EAAkBjB,EAAlBiB,cAER,OACI/B,eAACI,IAAI,CAACC,WAAS,EAACI,QAASa,IAAYvB,SAAA,CACjCN,cAACW,IAAI,CAACM,MAAI,EAACa,GAAI,GAAIS,GAAI,GAAGjC,SACtBN,cAACS,IAAU,CAACC,QAAQ,KAAIJ,SAAEiB,EAAKiB,UAEnCxC,cAACW,IAAI,CAACM,MAAI,EAACa,GAAI,GAAIS,GAAI,GAAGjC,SACrBiB,EAAKkB,OAEVzC,cAACW,IAAI,CAACM,MAAI,EAACa,GAAI,GAAIS,GAAI,GAAGjC,SACtBC,eAACmC,IAAI,CAACC,UAAU,MAAM,aAAW,uBAAsBrC,SAAA,CACnDC,eAACqC,IAAQ,CAACC,QAAM,EAAAvC,SAAA,CACZN,cAAC8C,IAAY,CAAAxC,SACTN,cAAC+C,IAAS,CAACC,GAAI,CAAE/C,SAAU,cAE/BD,cAACiD,IAAY,CAACvD,QAASM,cAACS,IAAU,CAACC,QAAQ,YAAWJ,SAAC,YACvDN,cAACkD,IAAuB,CAAA5C,SACpBN,cAACS,IAAU,CAACC,QAAQ,YAAYS,MAAM,QAAOb,SAC5CgC,SAITtC,cAACmD,IAAO,IACR5C,eAACqC,IAAQ,CAACC,QAAM,EAAAvC,SAAA,CACZN,cAAC8C,IAAY,CAAAxC,SACTN,cAACoD,IAAY,CAACJ,GAAI,CAAE/C,SAAU,cAElCD,cAACiD,IAAY,CAACvD,QAASM,cAACS,IAAU,CAACC,QAAQ,YAAWJ,SAAC,eACvDN,cAACkD,IAAuB,CAAA5C,SACpBN,cAACS,IAAU,CAACC,QAAQ,YAAYS,MAAM,QAAOb,SACxC+C,EAAU9B,EAAK+B,UAAU,UAItCtD,cAACmD,IAAO,IACR5C,eAACqC,IAAQ,CAACC,QAAM,EAAAvC,SAAA,CACZN,cAAC8C,IAAY,CAAAxC,SACTN,cAACuD,IAAY,CAACP,GAAI,CAAE/C,SAAU,cAElCD,cAACiD,IAAY,CAACvD,QAASM,cAACS,IAAU,CAACC,QAAQ,YAAWJ,SAAC,cACvDN,cAACkD,IAAuB,CAAA5C,SACpBN,cAACS,IAAU,CAACC,QAAQ,YAAYS,MAAM,QAAOb,SACxCkD,IAAIC,eAAelC,EAAKmC,0BAQzD,E,sDCVetC,EA/CU,SAACC,GACtB,IAAQE,EAASC,IAAMC,WAAWC,KAA1BH,KACAoC,EAAetC,EAAfsC,WAER,OACI3D,cAAA4D,WAAA,CAAAtD,SACCqD,EAAWE,OAAS,EACjBtD,eAAAqD,WAAA,CAAAtD,SAAA,CACAN,cAACS,IAAU,CAACC,QAAQ,KAAIJ,SAAC,gBAAwBN,cAAA,SACjDA,cAAC8D,IAAc,CAAAxD,SACXC,eAACwD,IAAK,CAACC,cAAY,EAAA1D,SAAA,CACfN,cAACiE,IAAS,CAAA3D,SACNC,eAAC2D,IAAQ,CAAA5D,SAAA,CACLN,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAC,UAC1BN,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAEiB,EAAK6C,eAChCpE,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAC,uBAGlCN,cAACqE,IAAS,CAAA/D,SACLqD,EAAWW,KAAI,SAACC,EAAQC,GAAK,OAC1BjE,eAAC2D,IAAQ,CAACO,OAAK,EAAAnE,SAAA,CACXN,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAEiE,EAAOG,WAClC1E,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAEqE,WAAWJ,EAAOK,SAASC,gBAAgBC,QAAQ,KAC9E9E,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAEkD,IAAIC,eAAec,EAAOb,gBAHpCa,EAAOQ,GAIjB,cAM1B,IAeb,ECEe3D,EA/CU,SAACC,GACtB,IAAQE,EAASC,IAAMC,WAAWC,KAA1BH,KACAyD,EAAY3D,EAAZ2D,QAER,OACIhF,cAAA4D,WAAA,CAAAtD,SACC0E,EAAQnB,OAAS,EACdtD,eAAAqD,WAAA,CAAAtD,SAAA,CACAN,cAACS,IAAU,CAACC,QAAQ,KAAIJ,SAAC,qBAA6BN,cAAA,SACtDA,cAAC8D,IAAc,CAAAxD,SACXC,eAACwD,IAAK,CAACC,cAAY,EAAA1D,SAAA,CACfN,cAACiE,IAAS,CAAA3D,SACNC,eAAC2D,IAAQ,CAAA5D,SAAA,CACLN,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAC,UAC1BC,eAAC4D,IAAS,CAAChD,MAAM,SAAQb,SAAA,CAAEiB,EAAK6C,aAAa,aAC7CpE,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAC,oBAGlCN,cAACqE,IAAS,CAAA/D,SACL0E,EAAQV,KAAI,SAACW,EAAKT,GAAK,OACpBjE,eAAC2D,IAAQ,CAACO,OAAK,EAAAnE,SAAA,CACXN,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAE2E,EAAIzC,QAC/BxC,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAEqE,WAAWM,EAAIC,MAAML,gBAAgBC,QAAQ,KACxE9E,cAACmE,IAAS,CAAChD,MAAM,SAAQb,SAAEkD,IAAIC,eAAewB,EAAIvB,gBAHjCuB,EAAIF,GAId,cAM3B,IAeZ,E,kDCuCeI,UA5EE,WACb,IAAQ5D,EAASC,IAAMC,WAAWC,KAA1BH,KACF6D,EAAWC,cACjBC,EAAoC9D,IAAM+D,UAAS,GAAKC,EAAAC,YAAAH,EAAA,GAAhDI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC/BI,EAAsCpE,IAAM+D,SAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAhDjC,EAAUkC,EAAA,GAAEC,EAAaD,EAAA,GACjCE,EAAgCvE,IAAM+D,SAAS,IAAGS,EAAAP,YAAAM,EAAA,GAA1Cf,EAAOgB,EAAA,GAAEC,EAAUD,EAAA,GAC3BE,EAA4C1E,IAAM+D,SAAS,IAAGY,EAAAV,YAAAS,EAAA,GAAtD5D,EAAa6D,EAAA,GAAEC,EAAgBD,EAAA,GAEjCE,EAAoB,eAAA5G,EAAA6G,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,IAAMC,IAAIC,IAAOC,UAAU5F,EAAK6F,UAAY,eAAgB,CAAEC,OAAQ,CAAEC,OAAQ/F,EAAKwD,GAAIwC,OAAQ,YAAaC,MAAO,EAAIC,KAAM,KAAO,KAAD,EAA9I,OAAff,EAAeG,EAAAa,KAAAb,EAAAE,KAAA,EACfvD,IAAImE,oBAAoBjB,EAAgBkB,KAAKC,SAAS,KAAD,EACf,OAA5C/B,EAAcY,EAAgBkB,KAAKC,SAAShB,EAAAE,KAAA,EAEjBC,IAAMC,IAAIC,IAAOC,UAAU5F,EAAK6F,UAAY,YAAa,CAAEC,OAAQ,CAAEC,OAAQ/F,EAAKwD,GAAIwC,OAAQ,SAAUC,MAAO,EAAIC,KAAM,KAAO,KAAD,EAApJd,EAAYE,EAAAa,KAClBzB,EAAWU,EAAaiB,KAAKC,SAAShB,EAAAE,KAAA,iBAEvB,OAFuBF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAEtCkB,QAAQC,IAAGnB,EAAAiB,IAAIjB,EAAAoB,OAAA,SACR7C,EAAS,CAAE8C,KAAMC,IAAeC,MAAM,EAAMC,QAAUxB,EAAAiB,GAAEQ,SAAWzB,EAAAiB,GAAEQ,SAASV,KAAKS,QAAUxB,EAAAiB,GAAE7F,WAClGvB,QAAS,QAAS6H,cAAe,QAASC,OAAO,KAAO,yBAAA3B,EAAA4B,OAAA,GAAAhC,EAAA,mBAEnE,kBAbyB,OAAAhH,EAAAiJ,MAAA,KAAAC,UAAA,KAepBC,EAAgB,eAAAC,EAAAvC,YAAAC,cAAAC,MAAG,SAAAsC,IAAA,IAAAC,EAAA,OAAAxC,cAAAK,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAlC,KAAA,EAAAkC,EAAAjC,KAAA,EAECvD,IAAImE,oBAAoB,CAAC,CAACsB,OAAQ1H,EAAK0H,UAAU,KAAD,EAA5DF,EAAGC,EAAAtB,KACTtB,EAAiB2C,EAAI,GAAGrE,UAAUsE,EAAAjC,KAAA,gBAEnB,OAFmBiC,EAAAlC,KAAA,EAAAkC,EAAAlB,GAAAkB,EAAA,SAElCjB,QAAQC,IAAGgB,EAAAlB,IAAIkB,EAAAf,OAAA,SACR7C,EAAS,CAAE8C,KAAMC,IAAeC,MAAM,EAAMC,QAAUW,EAAAlB,GAAEQ,SAAWU,EAAAlB,GAAEQ,SAASV,KAAKS,QAAUW,EAAAlB,GAAE7F,WAClGvB,QAAS,QAAS6H,cAAe,QAASC,OAAO,KAAO,yBAAAQ,EAAAP,OAAA,GAAAK,EAAA,kBAEnE,kBATqB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAWhBO,EAAI,eAAAC,EAAA7C,YAAAC,cAAAC,MAAG,SAAA4C,IAAA,OAAA7C,cAAAK,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACU,OAAnBpB,GAAa,GAAM0D,EAAAtC,KAAA,EACbV,IAAuB,KAAD,SAAAgD,EAAAtC,KAAA,EACtB6B,IAAmB,KAAD,EACxBjD,GAAa,GAAO,wBAAA0D,EAAAZ,OAAA,GAAAW,EAAA,KACvB,kBALS,OAAAD,EAAAT,MAAA,KAAAC,UAAA,KAWV,OAJAnH,IAAM8H,WAAU,WACZJ,GACJ,GAAG,IAGC3I,eAAAqD,WAAA,CAAAtD,SAAA,CACAN,cAACuJ,IAAM,CAAAjJ,SACHC,eAAA,SAAAD,SAAA,CAAQiB,EAAKiB,MAAM,eAGtBkD,EACGnF,eAAAqD,WAAA,CAAAtD,SAAA,CACAN,cAAA,SAAMA,cAAA,SACNA,cAACW,IAAI,CAACC,WAAS,EAACE,eAAe,SAAQR,SACnCN,cAACwJ,IAAgB,CAACxK,MAAM,YAAYyK,KAAK,cAG7C,GAEF/D,EAUE,GATAnF,eAAAqD,WAAA,CAAAtD,SAAA,CACAN,cAAC0J,EAAc,IACf1J,cAAA,SAAMA,cAAA,SACNA,cAAC2J,EAAY,CAACrH,cAAeA,IAC7BtC,cAAA,SAAMA,cAAA,SACNA,cAAC4J,EAAc,CAACjG,WAAYA,IAC5B3D,cAAA,SAAMA,cAAA,SACNA,cAAC6J,EAAW,CAAC7E,QAASA,SAMlC,C","file":"static/js/27.e5f6148d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    revenueCard: {\r\n        position: 'relative',\r\n        color: '#fff'\r\n    },\r\n    revenueIcon: {\r\n        position: 'absolute',\r\n        left: '-17px',\r\n        bottom: '-27px',\r\n        color: '#fff',\r\n        transform: 'rotate(25deg)',\r\n        '&> svg': {\r\n            width: '100px',\r\n            height: '100px',\r\n            opacity: '0.35'\r\n        }\r\n    }\r\n}));\r\n\r\n//=============================|| USER NUM CARD ||=============================//\r\n\r\nconst UserCountCard = ({ primary, secondary, iconPrimary, color }) => {\r\n    const classes = useStyles();\r\n\r\n    const IconPrimary = iconPrimary;\r\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\r\n\r\n    return (\r\n        <Card style={{ background: color }} className={classes.revenueCard}>\r\n            <CardContent>\r\n                <Typography variant=\"subtitle2\" className={classes.revenueIcon}>\r\n                    {primaryIcon}\r\n                </Typography>\r\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"h3\" align=\"center\" color=\"inherit\">\r\n                            {secondary}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"body1\" align=\"center\" color=\"inherit\">\r\n                            {primary}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nUserCountCard.propTypes = {\r\n    primary: PropTypes.string,\r\n    secondary: PropTypes.string,\r\n    iconPrimary: PropTypes.object,\r\n    color: PropTypes.string\r\n};\r\n\r\nexport default UserCountCard;\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport UserCountCard from '../../../ui-component/cards/UserCountCard';\r\nimport { gridSpacing } from '../../../store/constant';\r\nimport GameContext from '../../../contexts/GameContext';\r\nimport AccountCircleTwoTone from '@material-ui/icons/AccountCircleTwoTone';\r\nimport EmojiEventsTwoToneIcon from '@material-ui/icons/EmojiEventsTwoTone';\r\nimport useColors from '../../../hooks/useColors';\r\n\r\n//===========================|| WIDGET STATISTICS ||===========================//\r\n\r\nconst WidgetStatistics = (props) => {\r\n    const theme = useTheme();\r\n    const { game } = React.useContext(GameContext);\r\n    const { colors } = useColors();\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={6} md={6}>\r\n                <UserCountCard\r\n                    primary=\"Members\"\r\n                    secondary={game.memberCount.toString()}\r\n                    iconPrimary={AccountCircleTwoTone}\r\n                    color={colors.info}\r\n                />\r\n            </Grid>\r\n            {/*}<Grid item xs={6} md={4}>\r\n                <UserCountCard\r\n                    primary=\"???\"\r\n                    secondary={'???'}\r\n                    iconPrimary={DescriptionTwoToneIcon}\r\n                    color={theme.palette.primary.dark}\r\n                />\r\n            </Grid>{*/}\r\n            <Grid item xs={6} md={6}>\r\n                <UserCountCard\r\n                    primary=\"Bets\"\r\n                    secondary={game.betCount.toString()}\r\n                    \r\n                    iconPrimary={EmojiEventsTwoToneIcon}\r\n                    color={colors.info}\r\n                />\r\n            </Grid>\r\n\r\n         \r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default WidgetStatistics;\r\n","import React from 'react';\r\nimport { Grid, Typography, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText,Divider,} from '@material-ui/core';\r\nimport languages from '../../../utils/locales/languages.json';\r\nimport fct from '../../../utils/fct.js';\r\nimport { gridSpacing } from '../../../store/constant';\r\nimport GameContext from '../../../contexts/GameContext';\r\nimport { IconCrown, IconLanguage, IconCalendar } from '@tabler/icons';\r\n\r\n//===========================|| WIDGET STATISTICS ||===========================//\r\n\r\nconst WidgetStatistics = (props) => {\r\n    const { game } = React.useContext(GameContext);\r\n    const { adminUsername } = props;\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} lg={12}>\r\n                <Typography variant=\"h2\">{game.title}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} lg={12}>\r\n                {game.desc}\r\n            </Grid>\r\n            <Grid item xs={12} lg={12}>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <IconCrown sx={{ fontSize: '1.3rem' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={<Typography variant=\"subtitle1\">Admin</Typography>} />\r\n                        <ListItemSecondaryAction>\r\n                            <Typography variant=\"subtitle2\" align=\"right\">\r\n                            {adminUsername}\r\n                            </Typography>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <IconLanguage sx={{ fontSize: '1.3rem' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={<Typography variant=\"subtitle1\">Language</Typography>} />\r\n                        <ListItemSecondaryAction>\r\n                            <Typography variant=\"subtitle2\" align=\"right\">\r\n                                {languages[game.language][0]}\r\n                            </Typography>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider /> \r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <IconCalendar sx={{ fontSize: '1.3rem' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={<Typography variant=\"subtitle1\">Created</Typography>} />\r\n                        <ListItemSecondaryAction>\r\n                            <Typography variant=\"subtitle2\" align=\"right\">\r\n                                {fct.formatDateTime(game._createdAt)}\r\n                            </Typography>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>      \r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default WidgetStatistics;\r\n","import React from 'react';\r\nimport { Table, Typography, TableBody, TableCell, TableContainer,\r\n    TableHead, TableRow } from '@material-ui/core';\r\nimport fct from '../../../utils/fct.js';\r\nimport GameContext from '../../../contexts/GameContext';\r\n\r\nconst WidgetStatistics = (props) => {\r\n    const { game } = React.useContext(GameContext);\r\n    const { topMembers } = props;\r\n\r\n    return (\r\n        <>\r\n        {topMembers.length > 0 ? (\r\n            <>\r\n            <Typography variant=\"h3\">Top Members</Typography><br />\r\n            <TableContainer>\r\n                <Table stickyHeader>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align='center'>Title</TableCell>\r\n                            <TableCell align='center'>{game.currencyName}</TableCell>\r\n                            <TableCell align='center'>Playing since</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {topMembers.map((member, index) => (\r\n                            <TableRow hover key={member.id}>\r\n                                <TableCell align='center'>{member.username}</TableCell>\r\n                                <TableCell align='center'>{parseFloat(member.currency.$numberDecimal).toFixed(2)}</TableCell>\r\n                                <TableCell align='center'>{fct.formatDateTime(member._createdAt)}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </>\r\n         ) : ''}\r\n\r\n        {/*topMembers.length == 0 ? (\r\n            <>  \r\n            <br />\r\n            <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">No Members to show.</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            </>\r\n        ) : ''*/}\r\n\r\n         </>\r\n    );\r\n};\r\n\r\nexport default WidgetStatistics;\r\n","import React from 'react';\r\nimport { Table, Typography, TableBody, TableCell, TableContainer, \r\n    TableHead, TableRow, } from '@material-ui/core';\r\nimport fct from '../../../utils/fct.js';\r\nimport GameContext from '../../../contexts/GameContext';\r\n\r\nconst WidgetStatistics = (props) => {\r\n    const { game } = React.useContext(GameContext);\r\n    const { topBets } = props;\r\n\r\n    return (\r\n        <>\r\n        {topBets.length > 0 ? (\r\n            <>\r\n            <Typography variant=\"h3\">Highest Pot Bets</Typography><br />\r\n            <TableContainer>\r\n                <Table stickyHeader>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align='center'>Title</TableCell>\r\n                            <TableCell align='center'>{game.currencyName} In Pot</TableCell>\r\n                            <TableCell align='center'>Created at</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {topBets.map((bet, index) => (\r\n                            <TableRow hover key={bet.id}>\r\n                                <TableCell align='center'>{bet.title}</TableCell>\r\n                                <TableCell align='center'>{parseFloat(bet.inPot.$numberDecimal).toFixed(2)}</TableCell>\r\n                                <TableCell align='center'>{fct.formatDateTime(bet._createdAt)}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer> \r\n            </>     \r\n        ) : ''}\r\n\r\n        {/*topBets.length == 0 ? (\r\n            <>  \r\n            <br />\r\n            <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">No Bets to show.</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            </>\r\n        ) : ''*/}\r\n        </>        \r\n            \r\n    );\r\n};\r\n\r\nexport default WidgetStatistics;\r\n","import React from 'react';\nimport GameStatsCards from './GameStatsCards';\nimport GameMainInfo from './GameMainInfo';\nimport GameTopMembers from './GameTopMembers';\nimport GameTopBets from './GameTopBets';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport { useDispatch } from 'react-redux';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport GameContext from '../../../contexts/GameContext';\nimport fct from '../../../utils/fct.js';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\nimport { Helmet } from \"react-helmet\";\n\nconst GameInfo = () => {\n    const { game } = React.useContext(GameContext);\n    const dispatch = useDispatch();\n    const [ isLoading, setIsLoading ] = React.useState(true);\n    const [ topMembers, setTopMembers ] = React.useState([]);\n    const [ topBets, setTopBets ] = React.useState([]);\n    const [ adminUsername, setAdminUsername ] = React.useState('');\n\n    const getTopMembersAndBets = async () => {\n        try {\n            const responseMembers = await axios.get(config.gameHosts[game.serverId] + '/v1/members/', { params: { gameId: game.id, sortBy: '-currency', limit: 3 , page: 1 } });\n            await fct.addUsernamesToArray(responseMembers.data.results);\n            setTopMembers(responseMembers.data.results);\n\n            const responseBets = await axios.get(config.gameHosts[game.serverId] + '/v1/bets/', { params: { gameId: game.id, sortBy: '-inPot', limit: 3 , page: 1 } });\n            setTopBets(responseBets.data.results);\n        } catch (e) {\n            console.log(e);\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\n                variant: 'alert', alertSeverity: 'error', close: true });\n        }\n    }\n\n    const getAdminUsername = async () => {\n        try {\n            const res = await fct.addUsernamesToArray([{userId: game.userId}]);\n            setAdminUsername(res[0].username);\n        } catch (e) {\n            console.log(e);\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\n                variant: 'alert', alertSeverity: 'error', close: true });\n        }\n    }\n\n    const init = async () => {\n        setIsLoading(true);\n        await getTopMembersAndBets();\n        await getAdminUsername();\n        setIsLoading(false);\n    }\n    \n    React.useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <>\n        <Helmet>\n            <title>{game.title} - Info</title>\n        </Helmet>\n\n        {isLoading ? (         \n            <>\n            <br /><br />\n            <Grid container justifyContent=\"center\">     \n                <CircularProgress color=\"secondary\" size=\"10em\"  /> \n            </Grid>\n            </>       \n        ) : ''}\n\n        {!isLoading ? (\n            <>\n            <GameStatsCards />\n            <br /><br /> \n            <GameMainInfo adminUsername={adminUsername}/>\n            <br /><br />\n            <GameTopMembers topMembers={topMembers} />\n            <br /><br />\n            <GameTopBets topBets={topBets} />\n            </>       \n        ) : ''}\n\n        </>   \n    );\n};\n\nexport default GameInfo;\n"],"sourceRoot":""}