{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","ui-component/cards/AuthFooter.js","ui-component/extended/AnimateButton.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","hooks/useScriptRef.js","../node_modules/@hcaptcha/react-hcaptcha/dist/esm/utils.js","../node_modules/@hcaptcha/react-hcaptcha/dist/esm/index.js","utils/password-strength.js","views/pages/authentication/jwt-forms/JWTRegister.js","views/pages/authentication/Register.js"],"names":["AuthWrapper1","styled","_ref","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","useStyles","makeStyles","_card","card","maxWidth","flexGrow","flexBasis","_defineProperty","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","children","other","_objectWithoutProperties","_excluded","classes","_jsx","MainCard","_objectSpread","className","contentClass","AuthFooter","Stack","direction","justifyContent","AnimateButton","React","forwardRef","ref","offset1","offset2","type","offset","scale","_useCycle","useCycle","_useCycle2","_slicedToArray","x","cycleX","_useCycle3","_useCycle4","y","cycleY","motion","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","module","exports","self","ReferenceError","__esModule","setPrototypeOf","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","bind","__proto__","useScriptRef","scripted","useRef","useEffect","current","getFrame","element","doc","ownerDocument","document","window","defaultView","parentWindow","getMountElement","head","SCRIPT_ID","HCAPTCHA_LOAD_FN_NAME","scripts","mountCaptchaScript","params","scriptLocation","frame","script","find","scope","getElementById","promise","Promise","resolve","reject","domain","apihost","createElement","id","src","async","undefined","loadAsync","onerror","event","query","entries","filter","value","map","_ref2","key","encodeURIComponent","join","generateQuery","appendChild","push","HCaptcha","_React$Component","props","_this","call","this","_hcaptcha","renderCaptcha","_assertThisInitialized","resetCaptcha","removeCaptcha","isReady","loadCaptcha","handleOnLoad","handleSubmit","handleExpire","handleError","handleOpen","handleClose","handleChallengeExpired","apiScriptRequested","state","isApiReady","isRemoved","elementId","captchaId","_inheritsLoose","_proto","componentDidMount","_this2","hcaptcha","setState","componentWillUnmount","reset","remove","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","_this3","every","_this$props","assethost","endpoint","host","imghost","hl","languageOverride","reCaptchaCompat","reportapi","sentry","custom","recaptchacompat","then","onReady","renderParams","assign","render","callback","_this4","onLoad","onVerify","_this$state","token","getResponse","ekey","getRespKey","onExpire","onError","_this$state2","onOpen","onClose","onChalExpired","execute","opts","setData","data","strengthIndicator","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","redButton","fontSize","fontWeight","dark","main","grey","border","borderColor","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","JWTRegister","others","_objectDestructuringEmpty","scriptedRef","_React$useState","useState","_React$useState2","showPassword","setShowPassword","_React$useState3","_React$useState4","checked","setChecked","colors","useColor","_React$useState5","_React$useState6","strength","setStrength","_React$useState7","_React$useState8","level","setLevel","_React$useState9","_React$useState10","passwordMatch","setPasswordMatch","_React$useState11","_React$useState12","captchaToken","setCaptchaToken","register","useAuth","dispatch","useDispatch","history","useHistory","location","useLocation","handleClickShowPassword","handleMouseDownPassword","preventDefault","changePassword","count","temp","label","errorMain","warningDark","orangeMain","successMain","successDark","checkPasswordConfirm","pass1","pass2","_jsxs","Fragment","Grid","container","item","xs","alignItems","Box","mb","Typography","variant","Formik","initialValues","username","email","password","passwordConfirm","submit","validationSchema","Yup","shape","max","required","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setErrors","setStatus","setSubmitting","wrap","_context","prev","next","abrupt","SNACKBAR_OPEN","open","message","alertSeverity","close","queryString","parse","search","fromLocation","success","t0","console","error","response","stop","_x","_x2","apply","arguments","_ref4","errors","handleBlur","handleChange","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","InputLabel","htmlFor","OutlinedInput","name","onBlur","onChange","inputProps","notchedOutline","FormHelperText","e","target","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Visibility","VisibilityOff","width","height","borderRadius","errorDark","FormControlLabel","control","Checkbox","component","Link","to","sitekey","config","hCaptchaSiteKey","handleCaptchaVerificationSuccess","mt","Button","disableElevation","disabled","size","Register","useTheme","matchDownSM","useMediaQuery","_Fragment","Helmet","sx","m","sm","RouterLink","Logo","secondary","gutterBottom","textAlign","Divider","textDecoration"],"mappings":"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","file":"static/js/12.0f80b88f.chunk.js","sourcesContent":["import { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MainCard from './../../../ui-component/cards/MainCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(5) + ' !important',\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: theme.spacing(3) + ' !important'\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import React from 'react';\r\nimport { Stack } from '@material-ui/core';\r\n\r\nconst AuthFooter = () => {\r\n    return (\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            {/*}<Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\">\r\n                berrydashboard.io\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\">\r\n                &copy; codedthemes.com\r\n            </Typography>{*/}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n//-----------------------|| ANIMATION BUTTON ||-----------------------//\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'dow':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div ref={ref} animate={{ y: y }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <motion.div ref={ref} animate={{ x: x }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale.hover }} whileTap={{ scale: scale.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { useEffect, useRef } from 'react';\r\n\r\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","function generateQuery(params) {\n  return Object.entries(params).filter(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return value || value === false;\n  }).map(function (_ref2) {\n    var key = _ref2[0],\n        value = _ref2[1];\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  }).join(\"&\");\n}\n\n;\n\nfunction getFrame(element) {\n  var doc = element && element.ownerDocument || document;\n  var win = doc.defaultView || doc.parentWindow || window;\n  return {\n    document: doc,\n    window: win\n  };\n}\n\nfunction getMountElement(element) {\n  return element || document.head;\n}\n\nexport { generateQuery, getFrame, getMountElement };","import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport { generateQuery, getFrame, getMountElement } from './utils.js';\nvar SCRIPT_ID = 'hcaptcha-api-script-id';\nvar HCAPTCHA_LOAD_FN_NAME = 'hcaptchaOnLoad'; // Prevent loading API script multiple times\n\nvar scripts = []; // Generate hCaptcha API script\n\nvar mountCaptchaScript = function mountCaptchaScript(params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  var element = getMountElement(params.scriptLocation);\n  delete params.scriptLocation;\n  var frame = getFrame(element);\n  var script = scripts.find(function (_ref) {\n    var scope = _ref.scope;\n    return scope === frame.window;\n  });\n\n  if (frame.document.getElementById(SCRIPT_ID) && script) {\n    // API was already requested\n    return script.promise;\n  }\n\n  var promise = new Promise(function (resolve, reject) {\n    // Create global onload callback\n    frame.window[HCAPTCHA_LOAD_FN_NAME] = resolve;\n    var domain = params.apihost || \"https://js.hcaptcha.com\";\n    delete params.apihost;\n    var script = frame.document.createElement(\"script\");\n    script.id = SCRIPT_ID;\n    script.src = domain + \"/1/api.js?render=explicit&onload=\" + HCAPTCHA_LOAD_FN_NAME;\n    script.async = params.loadAsync !== undefined ? params.loadAsync : true;\n    delete params.loadAsync;\n\n    script.onerror = function (event) {\n      return reject('script-error');\n    };\n\n    var query = generateQuery(params);\n    script.src += query !== \"\" ? \"&\" + query : \"\";\n    element.appendChild(script);\n  });\n  scripts.push({\n    promise: promise,\n    scope: frame.window\n  });\n  return promise;\n};\n\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HCaptcha, _React$Component);\n\n  function HCaptcha(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    /**\n     * Internal reference to track hCaptcha API\n     *\n     * Required as window is relative to initialization in application\n     * not where the script and iFrames have been loaded.\n     */\n\n    _this._hcaptcha = undefined; // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind(_assertThisInitialized(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind(_assertThisInitialized(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind(_assertThisInitialized(_this));\n    _this.isReady = _this.isReady.bind(_assertThisInitialized(_this)); // Event Handlers\n\n    _this.loadCaptcha = _this.loadCaptcha.bind(_assertThisInitialized(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleExpire = _this.handleExpire.bind(_assertThisInitialized(_this));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind(_assertThisInitialized(_this));\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.state = {\n      isApiReady: false,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n\n  var _proto = HCaptcha.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    // Once captcha is mounted intialize hCaptcha - hCaptcha\n    var element = getMountElement(this.props.scriptLocation);\n    var frame = getFrame(element);\n    this._hcaptcha = frame.window.hcaptcha || undefined;\n    var isApiReady = typeof this._hcaptcha !== 'undefined';\n    /*\n     * Check if hCaptcha has already been loaded,\n     * If Yes, render the captcha\n     * If No, create script tag and wait to render the captcha\n     */\n\n    if (isApiReady) {\n      this.setState({\n        isApiReady: true\n      }, function () {\n        _this2.renderCaptcha();\n      });\n      return;\n    }\n\n    this.loadCaptcha();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    } // Reset any stored variables / timers when unmounting\n\n\n    hcaptcha.reset(captchaId);\n    hcaptcha.remove(captchaId);\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    // Prevent component re-rendering when these internal state variables are updated\n    if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n\n    // Prop Keys that could change\n    var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n    var match = keys.every(function (key) {\n      return prevProps[key] === _this3.props[key];\n    }); // If they have changed, remove current captcha and render a new one\n\n    if (!match) {\n      this.removeCaptcha(function () {\n        _this3.renderCaptcha();\n      });\n    }\n  };\n\n  _proto.loadCaptcha = function loadCaptcha() {\n    if (this.apiScriptRequested) {\n      return;\n    }\n\n    var _this$props = this.props,\n        apihost = _this$props.apihost,\n        assethost = _this$props.assethost,\n        endpoint = _this$props.endpoint,\n        host = _this$props.host,\n        imghost = _this$props.imghost,\n        hl = _this$props.languageOverride,\n        reCaptchaCompat = _this$props.reCaptchaCompat,\n        reportapi = _this$props.reportapi,\n        sentry = _this$props.sentry,\n        custom = _this$props.custom,\n        loadAsync = _this$props.loadAsync,\n        scriptLocation = _this$props.scriptLocation;\n    var mountParams = {\n      apihost: apihost,\n      assethost: assethost,\n      endpoint: endpoint,\n      hl: hl,\n      host: host,\n      imghost: imghost,\n      recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n      reportapi: reportapi,\n      sentry: sentry,\n      custom: custom,\n      loadAsync: loadAsync,\n      scriptLocation: scriptLocation\n    };\n    mountCaptchaScript(mountParams).then(this.handleOnLoad)[\"catch\"](this.handleError);\n    this.apiScriptRequested = true;\n  };\n\n  _proto.renderCaptcha = function renderCaptcha(onReady) {\n    var isApiReady = this.state.isApiReady;\n    if (!isApiReady) return;\n    var renderParams = Object.assign({\n      \"open-callback\": this.handleOpen,\n      \"close-callback\": this.handleClose,\n      \"error-callback\": this.handleError,\n      \"chalexpired-callback\": this.handleChallengeExpired,\n      \"expired-callback\": this.handleExpire,\n      \"callback\": this.handleSubmit\n    }, this.props, {\n      hl: this.props.hl || this.props.languageOverride,\n      languageOverride: undefined\n    });\n    var hcaptcha = this._hcaptcha; //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n    var captchaId = hcaptcha.render(this.ref.current, renderParams);\n    this.setState({\n      isRemoved: false,\n      captchaId: captchaId\n    }, function () {\n      onReady && onReady();\n    });\n  };\n\n  _proto.resetCaptcha = function resetCaptcha() {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    } // Reset captcha state, removes stored token and unticks checkbox\n\n\n    hcaptcha.reset(captchaId);\n  };\n\n  _proto.removeCaptcha = function removeCaptcha(callback) {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    this.setState({\n      isRemoved: true\n    }, function () {\n      hcaptcha.remove(captchaId);\n      callback && callback();\n    });\n  };\n\n  _proto.handleOnLoad = function handleOnLoad() {\n    var _this4 = this;\n\n    this.setState({\n      isApiReady: true\n    }, function () {\n      var element = getMountElement(_this4.props.scriptLocation);\n      var frame = getFrame(element);\n      _this4._hcaptcha = frame.window.hcaptcha; // render captcha and wait for captcha id\n\n      _this4.renderCaptcha(function () {\n        // trigger onLoad if it exists\n        var onLoad = _this4.props.onLoad;\n        if (onLoad) onLoad();\n      });\n    });\n  };\n\n  _proto.handleSubmit = function handleSubmit(event) {\n    var onVerify = this.props.onVerify;\n    var _this$state = this.state,\n        isRemoved = _this$state.isRemoved,\n        captchaId = _this$state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (typeof hcaptcha === 'undefined' || isRemoved) return;\n    var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n    var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n    if (onVerify) onVerify(token, ekey); //Dispatch event to verify user response\n  };\n\n  _proto.handleExpire = function handleExpire() {\n    var onExpire = this.props.onExpire;\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n    if (onExpire) onExpire();\n  };\n\n  _proto.handleError = function handleError(event) {\n    var onError = this.props.onError;\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (this.isReady()) {\n      // If hCaptcha runs into error, reset captcha - hCaptcha\n      hcaptcha.reset(captchaId);\n    }\n\n    if (onError) onError(event);\n  };\n\n  _proto.isReady = function isReady() {\n    var _this$state2 = this.state,\n        isApiReady = _this$state2.isApiReady,\n        isRemoved = _this$state2.isRemoved;\n    return isApiReady && !isRemoved;\n  };\n\n  _proto.handleOpen = function handleOpen() {\n    if (!this.isReady() || !this.props.onOpen) {\n      return;\n    }\n\n    this.props.onOpen();\n  };\n\n  _proto.handleClose = function handleClose() {\n    if (!this.isReady() || !this.props.onClose) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  _proto.handleChallengeExpired = function handleChallengeExpired() {\n    if (!this.isReady() || !this.props.onChalExpired) {\n      return;\n    }\n\n    this.props.onChalExpired();\n  };\n\n  _proto.execute = function execute(opts) {\n    if (opts === void 0) {\n      opts = null;\n    }\n\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    if (opts && typeof opts !== \"object\") {\n      opts = null;\n    }\n\n    return hcaptcha.execute(captchaId, opts);\n  };\n\n  _proto.setData = function setData(data) {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    if (data && typeof data !== \"object\") {\n      data = null;\n    }\n\n    hcaptcha.setData(captchaId, data);\n  };\n\n  _proto.getResponse = function getResponse() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getResponse(this.state.captchaId);\n  };\n\n  _proto.getRespKey = function getRespKey() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getRespKey(this.state.captchaId);\n  };\n\n  _proto.render = function render() {\n    var elementId = this.state.elementId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      id: elementId\n    });\n  };\n\n  return HCaptcha;\n}(React.Component);\n\nexport default HCaptcha;","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from '../assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (value) => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n};\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (value) => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n};\r\n\r\n// has special chars\r\nconst hasSpecial = (value) => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n};\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (value) => {\r\n    let strengths = 0;\r\n    if (value.length > 5) strengths++;\r\n    if (value.length > 7) strengths++;\r\n    if (hasNumber(value)) strengths++;\r\n    if (hasSpecial(value)) strengths++;\r\n    if (hasMixed(value)) strengths++;\r\n    return strengths;\r\n};\r\n","import React, { useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, \n    FormHelperText, Grid, IconButton, InputAdornment,\n    InputLabel, OutlinedInput, Typography\n} from '@material-ui/core';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport config from '../../../../config';\nimport useAuth from '../../../../hooks/useAuth';\nimport useColor from '../../../../hooks/useColors';\nimport useScriptRef from '../../../../hooks/useScriptRef';\n//import Google from './../../../../assets/images/icons/social-google.svg';\nimport AnimateButton from '../../../../ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from '../../../../utils/password-strength';\nimport { SNACKBAR_OPEN } from '../../../../store/actions';\nimport queryString from 'query-string';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport HCaptcha from '@hcaptcha/react-hcaptcha';\n\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor:\n            theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 + ' !important' : theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//===========================|| FIREBASE - REGISTER ||===========================//\n\nconst JWTRegister = ({ ...others }) => {\n    const classes = useStyles();\n    const scriptedRef = useScriptRef();\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n    const { colors } = useColor();\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState('');\n    const [passwordMatch, setPasswordMatch] = React.useState(0);\n    const [ captchaToken, setCaptchaToken ] = React.useState('');\n    const { register /*, sendVerificationEmail*/ } = useAuth();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleCaptchaVerificationSuccess = (token, ekey) => {\n        setCaptchaToken(token);\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n    \n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    const checkPasswordConfirm = (pass1, pass2) => {\n        if (passwordMatch !== 0 || pass2.length >= pass1.length) {\n            if (pass1 === pass2)\n                setPasswordMatch(true);\n            else \n                setPasswordMatch(false);\n        }   \n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                {/*<Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth={true}\n                            className={classes.redButton}\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"contained\"\n                        >\n                            <img src={Google} alt=\"google\" width=\"20px\" sx={{ mr: { xs: 1, sm: 2 } }} className={classes.loginIcon} /> Sign\n                            up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <AnimateButton>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.signText}\n                                sx={{ borderRadius: customization.borderRadius + 'px' }}\n                                disableRipple\n                                disabled\n                            >\n                                OR\n                            </Button>\n                        </AnimateButton>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                */}\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n                {/*} initialValues={{\n                    username: 'aaaaaa',\n                    email: 'aaa@aaa.at',\n                    password: 'Qayqay123',\n                    submit: null\n                }} {*/}\n            <Formik\n                \n                initialValues={{\n                    username: '',\n                    email: '',\n                    password: '',\n                    passwordConfirm: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    username: Yup.string().max(24).required('Username is required'),\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required'),\n                  \n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (!checked)\n                            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  'T&S need to be accepted.',\n                                variant: 'alert', alertSeverity: 'error', close: true });\n\n                        /*const newUserCredential = */await register(values.username, values.email, values.password, captchaToken);\n\n                        //await sendVerificationEmail(values.username, values.email);\n                        //await newUserCredential.user.sendEmailVerification();\n                        history.push(queryString.parse(location.search).fromLocation);\n\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.response.data.message || err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.username && errors.username)}\n                            className={classes.loginInput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"username\"\n                                value={values.username}\n                                name=\"username\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.username && errors.username && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.username}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginInput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginInput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                    checkPasswordConfirm(e.target.value, values.passwordConfirm);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        \n                        {strength !== 0 && values.password !== '' && (\n                            <FormControl fullWidth>\n                                <Box mb={2}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box width={85} height={8} borderRadius={7} backgroundColor={level.color}></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginInput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password confirm</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.passwordConfirm}\n                                name=\"passwordConfirm\"\n                                label=\"Password confirm\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    checkPasswordConfirm(values.password, e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {passwordMatch === false && (\n                            <FormControl fullWidth>\n                                <Box mb={2}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box width={85} height={8} borderRadius={7} backgroundColor={colors.errorDark}></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                Passwords do not match.\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"center\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"/termsAndService\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                            <Grid item>                         \n                                    <HCaptcha\n                                    sitekey={config.hCaptchaSiteKey}\n                                    onVerify={(token,ekey) => handleCaptchaVerificationSuccess(token, ekey)}\n                                    />\n                            </Grid>\n                        </Grid>\n\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default JWTRegister;\n","import React from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\nimport AuthWrapper1 from './AuthWrapper1';\nimport AuthCardWrapper from './AuthCardWrapper';\nimport Logo from './../../../ui-component/Logo';\nimport JWTRegister from './jwt-forms/JWTRegister';\nimport AuthFooter from './../../../ui-component/cards/AuthFooter';\nimport { Helmet } from \"react-helmet\";\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n    const location = useLocation();\n\n    return (\n        <>\n        <Helmet>\n            <title>Register</title>\n        </Helmet>\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <JWTRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to={'/login' + location.search}\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n        </>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}