{"version":3,"sources":["views/game/Log/LogListItem.js","views/game/Log/index.js"],"names":["useStyles","makeStyles","theme","paper","padding","boxShadow","background","palette","mode","dark","main","primary","light","border","borderColor","CustomizedTimeline","props","color","icon","log","classes","colors","React","useContext","GameContext","game","useColors","logType","warningDark","successDark","errorDark","secondaryDark","TimelineItem","TimelineOppositeContent","Typography","variant","fct","formatDateTime","createdAt","TimelineSeparator","TimelineDot","style","backgroundColor","TimelineConnector","TimelineContent","Paper","elevation","className","component","title","desc","aaa","logsPage","setLogsPage","handlePageChange","a","b","c","index","useEffect","maxIndex","Math","ceil","logs","length","items","paginate","reverse","Timeline","position","map","i","Grid","container","direction","spacing","alignItems","item","xs","Pagination","page","onChange","count"],"mappings":"qYAuBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,QAAS,OACTC,UAAW,OACXC,WAAmC,SAAvBJ,EAAMK,QAAQC,KAAkBN,EAAMK,QAAQE,KAAKC,KAAOR,EAAMK,QAAQI,QAAQC,MAC5FC,OAAQ,aACRC,YAAoC,SAAvBZ,EAAMK,QAAQC,KAAkBN,EAAMK,QAAQE,KAAKA,KAAOP,EAAMK,QAAQI,QAAQF,UAMtF,SAASM,EAAoBC,GACxC,IAMIC,EAAOC,EANHC,EAAQH,EAARG,IACFC,EAAUpB,IAERqB,GADSC,IAAMC,WAAWC,KAA1BC,KACWC,cAAXL,QAkBR,MAdmB,cAAfF,EAAIQ,SACJV,EAAQI,EAAOO,YACfV,EAAO,cAAC,IAAD,KACe,cAAfC,EAAIQ,SACXV,EAAQI,EAAOQ,YACfX,EAAO,cAAC,IAAD,KACe,cAAfC,EAAIQ,SACXV,EAAQI,EAAOS,UACfZ,EAAO,cAAC,IAAD,KACe,eAAfC,EAAIQ,UACXV,EAAQI,EAAOU,cACfb,EAAO,cAAC,IAAD,KAIP,mCACA,eAACc,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQlB,MAAM,gBAAlC,SACKmB,IAAIC,eAAelB,EAAImB,eAGhC,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAaC,MAAO,CAAEC,gBAAiBzB,GAAvC,SACKC,IAGW,eAAfC,EAAIQ,QAA2B,cAACgB,EAAA,EAAD,IAAwB,MAE5D,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAW3B,EAAQjB,MAAxC,UACI,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,KAAKa,UAAU,KAAnC,SACK7B,EAAI8B,QAET,cAACf,EAAA,EAAD,UAAaf,EAAI+B,iBCpDrC,IAAMlD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiD,IAAK,OASM,SAASpC,IACJf,IAAhB,IACA,EAAwCsB,IAAMC,WAAWC,KAAjDC,EAAR,EAAQA,KAAM2B,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,YAGlBC,EAAgB,uCAAG,WAAOC,EAAEC,EAAEC,GAAX,SAAAF,EAAA,sDACrBF,EAAY,2BAAID,GAAL,IAAeM,MAAOF,KADZ,2CAAH,0DAUtB,OALAlC,IAAMqC,WAAU,WACZN,EAAY,2BAAID,GAAL,IAAeQ,SAAUC,KAAKC,KAAKrC,EAAKsC,KAAKC,OAbzC,IAamEC,MAAO7B,IAAI8B,SAAS,YAAIzC,EAAKsC,MAAMI,UAbtG,GAa+Hf,EAASM,YAExJ,CAACN,EAASM,QAGT,qCACCjC,EAAKsC,KAAKC,OAAS,EAChB,qCACI,cAACI,EAAA,EAAD,CAAUC,SAAS,YAAnB,SACKjB,EAASa,MAAMK,KAAI,SAACnD,EAAIoD,GAAL,OAChB,cAAC,EAAD,CAAqBpD,IAAKA,GAARoD,QAG1B,uBACA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAS,EAAGC,WAAW,SAA1D,SACI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAYC,KAAM5B,EAASM,MAAOuB,SAAU3B,EAAkB4B,MAAO9B,EAASQ,SAAU3C,MAAM,mBAK1G,GAEiB,GAApBQ,EAAKsC,KAAKC,OACP,qCACI,uBACA,cAACQ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAS,EAAGC,WAAW,SAA1D,SACI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACG,cAAC5C,EAAA,EAAD,CAAYC,QAAQ,KAApB,qCAKX","file":"static/js/31.73f916bf.chunk.js","sourcesContent":["import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Grid } from '@material-ui/core';\nimport {\n    Timeline,\n    TimelineItem,\n    TimelineSeparator,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineOppositeContent\n} from '@material-ui/lab';\n\nimport fct from '../../../utils/fct.js';\nimport GameContext from '../../../contexts/GameContext';\n// assets\n\nimport useColors from '../../../hooks/useColors.js';\nimport { IconCalendarStats, IconCalendarOff, IconCheck, IconBell, IconBellOff, IconTrash, IconPlus, IconActivity } from '@tabler/icons';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: '20px',\n        boxShadow: 'none',\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.primary.light,\n        border: '1px dashed',\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.primary.dark\n    }\n}));\n\n//==============================|| UI TIMELINE - CUSTOMIZED ||==============================//\n\nexport default function CustomizedTimeline( props ) {\n    const { log } = props;\n    const classes = useStyles();\n    const { game } = React.useContext(GameContext);\n    const { colors } = useColors();\n\n\n    let color, icon;\n    if (log.logType == 'betCreated') {\n        color = colors.warningDark;\n        icon = <IconPlus  />;\n    } else if (log.logType == 'betPaidOut') {\n        color = colors.successDark;\n        icon = <IconCheck  />;\n    } else if (log.logType == 'betAborted') {\n        color = colors.errorDark;\n        icon = <IconTrash  />;\n    } else if (log.logType == 'gameCreated') {\n        color = colors.secondaryDark;\n        icon = <IconActivity  />;\n    }\n\n    return (    \n        <>\n        <TimelineItem>\n            <TimelineOppositeContent>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    {fct.formatDateTime(log.createdAt)}\n                </Typography>\n            </TimelineOppositeContent>\n            <TimelineSeparator>\n                <TimelineDot style={{ backgroundColor: color }}>\n                    {icon}\n                    \n                </TimelineDot>\n                {log.logType != 'gameCreated' ? <TimelineConnector /> : ''}\n            </TimelineSeparator>\n            <TimelineContent>\n                <Paper elevation={3} className={classes.paper}>\n                    <Typography variant=\"h5\" component=\"h1\">\n                        {log.title}\n                    </Typography>\n                    <Typography>{log.desc}</Typography>\n                </Paper>\n            </TimelineContent>\n        </TimelineItem>\n\n        {/*}\n        \n            <TimelineItem>\n                <TimelineOppositeContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        9:30 am\n                    </Typography>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot color=\"secondary\">\n                        <FastfoodIcon sx={{ color: '#fff' }} />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h5\" component=\"h1\">\n                            Eat\n                        </Typography>\n                        <Typography>Because you need strength</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineOppositeContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        10:00 am\n                    </Typography>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot color=\"primary\">\n                        <LaptopMacIcon />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h5\" component=\"h1\">\n                            Code\n                        </Typography>\n                        <Typography>Because it&apos;s awesome!</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot color=\"secondary\">\n                        <HotelIcon />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h5\" component=\"h1\">\n                            Sleep\n                        </Typography>\n                        <Typography>Because you need rest</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot color=\"primary\">\n                        <RepeatIcon />\n                    </TimelineDot>\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h5\" component=\"h1\">\n                            Repeat\n                        </Typography>\n                        <Typography>Because this is the life you love!</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n        {*/}\n        </>\n    );\n}\n","import React, { useEffect } from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Grid, Pagination } from '@material-ui/core';\nimport {\n    Timeline,\n    TimelineItem,\n    TimelineSeparator,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineOppositeContent\n} from '@material-ui/lab';\n\nimport GameContext from '../../../contexts/GameContext';\nimport LogListItem from './LogListItem';\n// assets\nimport FastfoodIcon from '@material-ui/icons/FastfoodTwoTone';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMacTwoTone';\nimport HotelIcon from '@material-ui/icons/HotelTwoTone';\nimport RepeatIcon from '@material-ui/icons/RepeatTwoTone';\nimport fct from '../../../utils/fct.js';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    aaa: {\n        \n    }\n}));\n\n//==============================|| UI TIMELINE - CUSTOMIZED ||==============================//\n\nconst entriesPerPage = 12;\n\nexport default function CustomizedTimeline() {\n    const classes = useStyles();\n    const { game, logsPage, setLogsPage } = React.useContext(GameContext);\n    \n\n    const handlePageChange = async (a,b,c) => {\n        setLogsPage({...logsPage, index: b});\n\n    }\n\n    React.useEffect(() => {\n        setLogsPage({...logsPage, maxIndex: Math.ceil(game.logs.length / entriesPerPage), items: fct.paginate([...game.logs].reverse(),entriesPerPage,logsPage.index)});\n\n    }, [logsPage.index]);\n\n    return (\n        <>\n        {game.logs.length > 0 ? (\n            <>\n                <Timeline position=\"alternate\">\n                    {logsPage.items.map((log,i) => (\n                        <LogListItem key={i} log={log} />  \n                    ))}\n                </Timeline>\n                <br />\n                <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\n                    <Grid item xs={12}>\n                        <Pagination page={logsPage.index} onChange={handlePageChange} count={logsPage.maxIndex} color=\"primary\" />\n                    </Grid>\n                </Grid>\n            </>\n           \n        ) : ''}\n\n        {game.logs.length == 0 ? (\n            <>  \n                <br />\n                <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\n                    <Grid item xs={12}>\n                       <Typography variant=\"h3\">No logs to show.</Typography>\n                    </Grid>\n                </Grid>\n            </>\n           \n        ) : ''}\n        </>\n    );\n}\n"],"sourceRoot":""}