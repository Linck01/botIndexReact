{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","ui-component/cards/AuthFooter.js","hooks/useScriptRef.js","views/pages/authentication/jwt-forms/JWTLogin.js","views/pages/authentication/Login.js"],"names":["AuthWrapper1","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","children","other","classes","className","contentClass","AuthFooter","direction","justifyContent","variant","component","Link","href","target","useScriptRef","scripted","useRef","useEffect","current","util","require","loginInput","typography","customInput","JWTLogin","props","others","login","useAuth","scriptedRef","React","useState","checked","setChecked","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","success","console","error","inspect","response","data","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","inputProps","notchedOutline","FormHelperText","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","label","Grid","container","alignItems","item","FormControlLabel","control","Checkbox","color","Typography","to","sx","textDecoration","Box","mt","AnimateButton","Button","disabled","size","Login","useTheme","matchDownSM","useMediaQuery","xs","m","sm","mb","Logo","Stack","secondary","main","gutterBottom","fontSize","textAlign","Divider","RouterLink"],"mappings":"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","file":"static/js/21.014c3a84.chunk.js","sourcesContent":["// material-ui\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// project import\r\nimport MainCard from './../../../ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(5) + ' !important',\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: theme.spacing(3) + ' !important'\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Link, Typography, Stack } from '@material-ui/core';\r\n\r\n//-----------------------|| FOOTER - AUTHENTICATION 2 & 3 ||-----------------------//\r\n\r\nconst AuthFooter = () => {\r\n    return (\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\">\r\n                berrydashboard.io\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\">\r\n                &copy; codedthemes.com\r\n            </Typography>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default AuthFooter;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from '../../../../ui-component/extended/AnimateButton';\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport useScriptRef from '../../../../hooks/useScriptRef';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst util = require('util');\r\n\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n//===============================|| JWT LOGIN ||===============================//\r\n\r\nconst JWTLogin = (props, { ...others }) => {\r\n    const classes = useStyles();\r\n    const { login } = useAuth();\r\n    const scriptedRef = useScriptRef();\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: 'test@test.com',\r\n                password: 'qayqay12',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try { \r\n                    await login(values.email, values.password);\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err) {\r\n                    console.error(util.inspect(err));\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.response.data.message || err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput} variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-login\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                        />\r\n                        {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                {' '}\r\n                                {errors.email}{' '}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        className={classes.loginInput}\r\n                        variant=\"outlined\"\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password-login\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            name=\"password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{\r\n                                classes: {\r\n                                    notchedOutline: classes.notchedOutline\r\n                                }\r\n                            }}\r\n                            label=\"Password\"\r\n                        />\r\n                        {touched.password && errors.password && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                {' '}\r\n                                {errors.password}{' '}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Keep me logged in\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={ '/forgot-password/' }\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {errors.submit && (\r\n                        <Box mt={3}>\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                    <Box mt={2}>\r\n                        <AnimateButton>\r\n                            <Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\r\n                                Sign In\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default JWTLogin;\r\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './AuthWrapper1';\nimport AuthCardWrapper from './AuthCardWrapper';\nimport JWTLogin from './jwt-forms/JWTLogin';\nimport Logo from './../../../ui-component/Logo';\nimport AuthFooter from './../../../ui-component/cards/AuthFooter';\n\n// assets\n\n//================================|| AUTH3 - LOGIN ||================================//\n\nconst Login = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <JWTLogin login={3} />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/register\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don't have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}