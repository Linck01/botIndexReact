{"version":3,"sources":["../node_modules/@material-ui/core/CircularProgress/circularProgressClasses.js","../node_modules/@material-ui/core/CircularProgress/CircularProgress.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","utils/password-strength.js","views/user/Settings/UpdatePassword.js","views/user/Settings/index.js"],"names":["getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","experimentalStyled","name","overridesResolver","props","styles","styleProps","_extends","root","variant","capitalize","color","theme","display","transition","transitions","create","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","React","inProps","ref","useThemeProps","className","size","style","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","strengthColor","count","label","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","WidgetStatistics","useTheme","useState","showPassword","setShowPassword","password","setPassword","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","isLoading","setIsLoading","user","useAuth","dispatch","useDispatch","updateSettings","a","obj","axios","patch","config","apiHost","id","type","SNACKBAR_OPEN","open","message","alertSeverity","close","response","data","toString","Grid","container","spacing","gridSpacing","item","xs","Typography","IconButton","aria-label","onClick","onMouseDown","event","preventDefault","edge","md","TextField","fullWidth","onChange","e","target","Button","GameSettings","UpdatePassword"],"mappings":"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","file":"static/js/24.c122ff13.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { keyframes, css } from '@material-ui/styled-engine';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = experimentalStyled('span', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[styleProps.variant], styles[`color${capitalize(styleProps.color)}`]);\n  }\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-block'\n}, styleProps.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, styleProps.color !== 'inherit' && {\n  color: theme.palette[styleProps.color].main\n}),\n/* Styles applied to the root element if `variant=\"indeterminate\"`. */\n({\n  styleProps\n}) => styleProps.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = experimentalStyled('svg', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  /* Styles applied to the svg element. */\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = experimentalStyled('circle', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.circle, styles[`circle${capitalize(styleProps.variant)}`], styleProps.disableShrink && styles.circleDisableShrink);\n  }\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  /* Styles applied to the `circle` svg path. */\n  stroke: 'currentColor'\n}, styleProps.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, styleProps.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  styleProps\n}) => styleProps.variant === 'indeterminate' && !styleProps.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    styleProps: styleProps,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      styleProps: styleProps,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        styleProps: styleProps,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from '../assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (value) => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n};\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (value) => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n};\r\n\r\n// has special chars\r\nconst hasSpecial = (value) => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n};\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (value) => {\r\n    let strengths = 0;\r\n    if (value.length > 5) strengths++;\r\n    if (value.length > 7) strengths++;\r\n    if (hasNumber(value)) strengths++;\r\n    if (hasSpecial(value)) strengths++;\r\n    if (hasMixed(value)) strengths++;\r\n    return strengths;\r\n};\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Grid, Typography, TextField,IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput, } from '@material-ui/core';\r\n\r\nimport { gridSpacing } from '../../../store/constant';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { strengthColor, strengthIndicator } from '../../../utils/password-strength';\r\nimport { SNACKBAR_OPEN } from '../../../store/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// project imports\r\nimport fct from '../../../utils/fct.js';\r\nimport axios from '../../../utils/axios';\r\nimport config from '../../../config';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\n\r\n//===========================|| WIDGET STATISTICS ||===========================//\r\n\r\nconst WidgetStatistics = (props) => {\r\n    const theme = useTheme();\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const [passwordMatch, setPasswordMatch] = React.useState(0);\r\n    const [strength, setStrength] = React.useState(0);\r\n    const [level, setLevel] = React.useState('');\r\n    const [ password, setPassword ] = React.useState('');\r\n    const [ newPassword, setNewPassword ] = React.useState('');\r\n    const [ newPasswordConfirm, setNewPasswordConfirm ] = React.useState('');\r\n    const [ isLoading, setIsLoading ] = React.useState(false);\r\n    const { user } = useAuth();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const updateSettings = async () => {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const obj = { password, newPassword };\r\n            const response = await axios.patch(config.apiHost + '/v1/users/' + user.id, obj);\r\n            \r\n            //setPassword('');\r\n            //setNewPassword('');\r\n            //setNewPasswordConfirm('');\r\n\r\n            dispatch({ type: SNACKBAR_OPEN, open: true, message: 'Successfully changed settings', \r\n                variant: 'alert', alertSeverity: 'success', close: true });\r\n\r\n            setIsLoading(false);\r\n        } catch (e) { \r\n            setIsLoading(false);\r\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\r\n                variant: 'alert', alertSeverity: 'error', close: true });\r\n         }\r\n\r\n    };\r\n\r\n    const checkPasswordConfirm = (pass1, pass2) => {\r\n        if (passwordMatch !== 0 || pass2.length >= pass1.length) {\r\n            if (pass1 == pass2)\r\n                setPasswordMatch(true);\r\n            else \r\n                setPasswordMatch(false);\r\n        }   \r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    \r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">\r\n                        Change password \r\n                        <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                        >\r\n                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"Old password\"\r\n                            variant=\"outlined\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"New password\"\r\n                            variant=\"outlined\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                    <TextField\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            style={{width: '100%'}}\r\n                            fullWidth\r\n                            label=\"Confirm new password\"\r\n                            variant=\"outlined\"\r\n                            value={newPasswordConfirm}\r\n                            onChange={(e) => setNewPasswordConfirm(e.target.value)}\r\n                        />\r\n                </Grid>       \r\n            </Grid>\r\n            <br /><br />\r\n            <Button style={{width:'100%'}} variant=\"outlined\" color=\"secondary\" onClick={updateSettings}>\r\n                { isLoading ? (<> <CircularProgress color=\"secondary\"  size=\"1.7em\" /></>) : ('Change Password') }\r\n            </Button>\r\n            {/*}\r\n            <Grid container spacing={gridSpacing}>      \r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">Currency</Typography>\r\n                    <br />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={6}>\r\n                    \r\n                </Grid>             \r\n            </Grid>\r\n           {*/}\r\n            \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default WidgetStatistics;\r\n","import React from 'react';\n\nimport UpdatePassword from './UpdatePassword';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport { useDispatch } from 'react-redux';\n\n// project imports\nimport { gridSpacing } from '../../../store/constant';\nimport fct from '../../../utils/fct.js';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\nimport useAuth from '../../../hooks/useAuth';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { Helmet } from \"react-helmet\";\n\n//-----------------------|| PROFILE 1 - PROFILE ||-----------------------//\n\nconst GameSettings = () => {\n\n    const [ isLoading, setIsLoading ] = React.useState(false);\n\n   \n    return (\n        <>\n        \n        <UpdatePassword />\n        <br /><br />\n        {/*}\n        <AdvancedSettings currencyName={currencyName} setCurrencyName={setCurrencyName} startCurrency={startCurrency} setStartCurrency={setStartCurrency} password={password} setPassword={setPassword} isPublic={isPublic} setIsPublic={setIsPublic} isEnded={isEnded} setIsEnded={setIsEnded} />\n        <br /><br />{*/}\n       \n        \n        </>\n        \n    );\n};\n\nexport default GameSettings;\n"],"sourceRoot":""}