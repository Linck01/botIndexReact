{"version":3,"sources":["ui-component/extended/Avatar.js","assets/images/profile/img-profile-bg.png","ui-component/game/BetStatusTab.js","views/game/Bets/BetListItem.js","views/game/Bets/CustomDateTime.js","views/game/Bets/AnswerCatalogue.js","views/game/Bets/AnswerScale.js","views/game/Bets/AddBetDialog.js","views/game/Bets/index.js"],"names":["useStyles","makeStyles","theme","primaryBackground","background","palette","primary","main","color","paper","secondaryBackground","secondary","errorBackground","error","warningBackground","warning","dark","infoBackground","info","successBackground","success","darkBackground","light","greyBackground","grey","primaryOutline","border","secondaryOutline","errorOutline","warningOutline","infoOutline","successOutline","greyOutline","darkOutline","badge","width","spacing","height","xs","sm","md","lg","xl","Avatar","className","outline","size","others","classes","avatarClass","join","successBadge","iconError","mode","iconSuccess","iconWarning","iconInfo","btnTable","borderColor","tableSubContent","whiteSpace","divider","opacity","BetStatusTab","bet","React","useContext","GameContext","colors","game","socket","amIAdmin","amIMod","useColors","status","fct","getStatus","getCorrectAnswerStrings","correctAnswerStrings","moreAnswersString","container","item","textAlign","icon","style","variant","paddingLeft","title","align","fontSize","badgeStatus","formatDateTime","_createdAt","timeLimit","isSolved","map","a","Fragment","label","successDark","value","progress","timeLeftString","BetListItem","Grid","gridSpacing","alignItems","Typography","memberCount","inPot","$numberDecimal","capitalizeFirstLetter","betType","textDecoration","to","id","Button","startIcon","Divider","CustomDateTime","setValue","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","indicatorColor","renderInput","props","TextField","fullWidth","helperText","onChange","newValue","sx","bgcolor","AnswerCatalogue","catalogue_answers","setCatalogue_answers","updateAnswer","e","field","index","tmp","target","useEffect","answer","i","defaultValue","inputProps","maxLength","type","onClick","length","push","odds","stroke","valueText","AnswerScale","scale_options","setScale_options","useState","currentValue","setCurrentValue","parseFloat","winRate","parseInt","step","min","max","mt","Slider","getAriaValueText","valueLabelDisplay","AddBetDialog","open","setOpen","isLoading","setIsLoading","dispatch","useDispatch","desc","setDesc","setTitle","Date","setTimeLimit","setBetType","handleClose","createBet","sleep","tempDate","setSeconds","obj","gameId","axios","post","config","gameHosts","serverId","SNACKBAR_OPEN","message","alertSeverity","close","response","data","toString","justifyContent","Dialog","onClose","aria-labelledby","DialogTitle","fontWeight","DialogContent","multiline","rows","FormControl","RadioGroup","row","aria-label","name","FormControlLabel","control","Radio","DialogActions","pr","CircularProgress","Bets","privileges","betsPage","setBetsPage","useAuth","user","getBetsPage","get","apiHost","params","sortBy","limit","page","items","results","maxIndex","totalPages","console","log","handlePageChange","b","c","admin","mod","direction","Pagination","count"],"mappings":"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","file":"static/js/26.dca6c491.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAvatar from '@material-ui/core/Avatar';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    primaryBackground: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    secondaryBackground: {\r\n        background: theme.palette.secondary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    errorBackground: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    warningBackground: {\r\n        background: theme.palette.warning.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    infoBackground: {\r\n        background: theme.palette.info.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    successBackground: {\r\n        background: theme.palette.success.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    darkBackground: {\r\n        background: theme.palette.dark.dark,\r\n        color: theme.palette.dark.light\r\n    },\r\n    greyBackground: {\r\n        background: theme.palette.grey[500],\r\n        color: theme.palette.background.paper\r\n    },\r\n    primaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.primary.main,\r\n        border: '2px solid ' + theme.palette.primary.main\r\n    },\r\n    secondaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.secondary.main,\r\n        border: '2px solid ' + theme.palette.secondary.main\r\n    },\r\n    errorOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.error.main,\r\n        border: '2px solid ' + theme.palette.error.main\r\n    },\r\n    warningOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.warning.dark,\r\n        border: '2px solid ' + theme.palette.warning.dark\r\n    },\r\n    infoOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.info.main,\r\n        border: '2px solid ' + theme.palette.info.main\r\n    },\r\n    successOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.success.dark,\r\n        border: '2px solid ' + theme.palette.success.dark\r\n    },\r\n    greyOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.grey[500],\r\n        border: '2px solid ' + theme.palette.grey[500]\r\n    },\r\n    darkOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.dark.dark,\r\n        border: '2px solid ' + theme.palette.dark.dark\r\n    },\r\n    badge: {\r\n        width: theme.spacing(3.5),\r\n        height: theme.spacing(3.5)\r\n    },\r\n    xs: {\r\n        width: theme.spacing(4.25),\r\n        height: theme.spacing(4.25)\r\n    },\r\n    sm: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5)\r\n    },\r\n    md: {\r\n        width: theme.spacing(7.5),\r\n        height: theme.spacing(7.5)\r\n    },\r\n    lg: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9)\r\n    },\r\n    xl: {\r\n        width: theme.spacing(10.25),\r\n        height: theme.spacing(10.25)\r\n    }\r\n}));\r\n\r\n//-----------------------|| AVATAR ||-----------------------//\r\n\r\nconst Avatar = ({ className, color, outline, size, ...others }) => {\r\n    const classes = useStyles();\r\n    let avatarClass = [];\r\n\r\n    avatarClass = color\r\n        ? outline\r\n            ? [classes[color + 'Outline'], ...avatarClass]\r\n            : [classes[color + 'Background'], ...avatarClass]\r\n        : avatarClass;\r\n    avatarClass = size ? [classes[size], ...avatarClass] : avatarClass;\r\n    if (className) {\r\n        avatarClass = className ? [...avatarClass, className] : avatarClass;\r\n    }\r\n\r\n    return <MuiAvatar className={avatarClass.join(' ')} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string\r\n};\r\n\r\nexport default Avatar;\r\n","export default __webpack_public_path__ + \"static/media/img-profile-bg.2b15e931.png\";","import React from 'react';\r\n\r\n// material-ui\r\nimport {\r\n    AvatarGroup,\r\n    Button,\r\n    Grid,\r\n    LinearProgress,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Typography,\r\n    ListItem,\r\n    useMediaQuery,\r\n    Divider,\r\n    Chip\r\n} from '@material-ui/core';\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nimport GameContext from '../../contexts/GameContext';\r\nimport fct from '../../utils/fct.js';\r\nimport useColors from '../../hooks/useColors.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    successBadge: {\r\n        color: theme.palette.success.dark,\r\n        width: '14px',\r\n        height: '14px'\r\n    },\r\n    iconError: {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: theme.palette.mode === 'dark' ? theme.palette.error.dark : theme.palette.error.light\r\n    },\r\n    iconSuccess: {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: theme.palette.mode === 'dark' ? theme.palette.success.dark : theme.palette.success.main\r\n    },\r\n    iconWarning: {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: theme.palette.mode === 'dark' ? theme.palette.warning.dark : theme.palette.warning.main\r\n    },\r\n    iconInfo: {\r\n        width: '60px',\r\n        height: '60px',\r\n        color: theme.palette.mode === 'dark' ? theme.palette.info.dark : theme.palette.info.light\r\n    },\r\n    btnTable: {\r\n        width: '100%',\r\n        '&:hover': {\r\n            background: theme.palette.secondary.main,\r\n            borderColor: theme.palette.secondary.main,\r\n            color: '#fff'\r\n        }\r\n    },\r\n    tableSubContent: {\r\n        whiteSpace: 'break-spaces'\r\n    },\r\n    divider: {\r\n        opacity: 0.1,\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light : theme.palette.primary.light \r\n    }\r\n}));\r\n\r\n\r\n\r\nconst BetStatusTab = ({ bet }) => {\r\n    const classes = useStyles();\r\n    const { game, socket, amIAdmin, amIMod } = React.useContext(GameContext);\r\n    const { colors } = useColors();\r\n    const status = fct.getStatus(bet);\r\n\r\n\r\n    const { correctAnswerStrings, moreAnswersString } = fct.getCorrectAnswerStrings(bet, 40);\r\n    \r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={3} textAlign=\"center\">\r\n                {<status.icon style={{color: colors[status.color], width: '5em', height: '5em',}}/>} \r\n                <br/>\r\n                <Typography variant=\"caption\" style={{paddingLeft:'5%'}}>{status.title}</Typography>\r\n            </Grid>\r\n            <Grid item xs={9} align=\"left\">\r\n                <Typography align=\"left\" style={{fontSize:'1.6em'}} variant=\"subtitle1\">\r\n                    {bet.title}\r\n                    {bet.badgeStatus === 'active' && <CheckCircleIcon className={classes.successBadge} />}\r\n                </Typography>\r\n                <Typography align=\"left\" variant=\"subtitle2\" className={classes.tableSubContent}>\r\n                    {fct.formatDateTime(bet._createdAt)} - {fct.formatDateTime(bet.timeLimit)}\r\n                </Typography>\r\n                \r\n                {bet.isSolved ? correctAnswerStrings.map(a => (\r\n                    <React.Fragment key={a}>\r\n                        <Chip label={a} variant=\"outlined\" style={{color: colors.successDark, borderColor: colors.successDark}} /> \r\n                        <Typography align=\"left\" variant=\"caption\" color=\"primary\" className={classes.tableSubContent}>{moreAnswersString}</Typography>\r\n                    </React.Fragment>\r\n                )) : (\r\n\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={10}>\r\n                            <br />\r\n                            <LinearProgress variant=\"determinate\" value={status.progress} color=\"primary\" style={{width: '90%'}} />\r\n                            <Typography align=\"left\" variant=\"subtitle1\">\r\n                                {fct.timeLeftString(bet.timeLimit)}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            \r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default BetStatusTab;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n// material-ui\nimport {\n    AvatarGroup,\n    Button,\n    Grid,\n    LinearProgress,\n    makeStyles,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    Typography,\n    ListItem,\n    useMediaQuery,\n    Divider,\n    Chip\n} from '@material-ui/core';\n\nimport { gridSpacing } from '../../../store/constant';\n\nimport ChatBubbleTwoToneIcon from '@material-ui/icons/ChatBubbleTwoTone';\n\nimport GameContext from '../../../contexts/GameContext';\nimport fct from '../../../utils/fct.js';\nimport BetStatusTab from '../../../ui-component/game/BetStatusTab';\nimport useColors from '../../../hooks/useColors.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n    successBadge: {\n        color: theme.palette.success.dark,\n        width: '14px',\n        height: '14px'\n    },\n    iconError: {\n        width: '60px',\n        height: '60px',\n        color: theme.palette.mode === 'dark' ? theme.palette.error.dark : theme.palette.error.light\n    },\n    iconSuccess: {\n        width: '60px',\n        height: '60px',\n        color: theme.palette.mode === 'dark' ? theme.palette.success.dark : theme.palette.success.main\n    },\n    iconWarning: {\n        width: '60px',\n        height: '60px',\n        color: theme.palette.mode === 'dark' ? theme.palette.warning.dark : theme.palette.warning.main\n    },\n    iconInfo: {\n        width: '60px',\n        height: '60px',\n        color: theme.palette.mode === 'dark' ? theme.palette.info.dark : theme.palette.info.light\n    },\n    btnTable: {\n        width: '100%',\n        '&:hover': {\n            background: theme.palette.secondary.main,\n            borderColor: theme.palette.secondary.main,\n            color: '#fff'\n        }\n    },\n    tableSubContent: {\n        whiteSpace: 'break-spaces'\n    },\n    divider: {\n        opacity: 0.1,\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light : theme.palette.primary.light \n    }\n}));\n\n\n\nconst BetListItem = ({ bet }) => {\n    const classes = useStyles();\n    const { game, socket, amIAdmin, amIMod } = React.useContext(GameContext);\n    //const util = require('util');\n    //console.log(util.inspect(bets));\n    const { colors } = useColors();\n    const status = fct.getStatus(bet);\n\n\n    const { correctAnswerStrings, moreAnswersString } = fct.getCorrectAnswerStrings(bet, 40);\n\n    \n    /*if (bet.betType == 'catalogue') {\n\n    }\n    if (bet.betType == 'scale') {\n\n    }*/\n    \n    return (\n        <>\n         \n            <Grid container spacing={gridSpacing} alignItems=\"center\">\n                <Grid item xs={12} md={6}>\n                    <BetStatusTab bet={bet} />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={4} md={4}>\n                            <Typography variant=\"caption\">Members</Typography>\n                            <Typography variant=\"h6\">{bet.memberCount}</Typography>\n                        </Grid>\n                            \n                        <Grid item xs={4} md={4}>\n                                <Typography variant=\"caption\">In Pot</Typography>\n                                <Typography variant=\"h6\">{bet.inPot.$numberDecimal}</Typography>\n                            </Grid>\n\n                \n                        <Grid item xs={4} md={4}>\n                                <Typography variant=\"caption\">Type</Typography>\n                                <Typography variant=\"h6\">{fct.capitalizeFirstLetter(bet.betType)}</Typography>\n                        </Grid>\n                        \n                        <Grid item xs={12} md={12}> \n                            <Link style={{ textDecoration: 'none' }} to={'/game/' + game.id + '/bet/' + bet.id}>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    className={classes.btnTable}\n                                    startIcon={<ChatBubbleTwoToneIcon />}>\n                                    Details\n                                </Button>\n                            </Link>        \n                                \n                            \n                            {/*}\n                            <Grid item xs={6}>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"error\"\n                                    size=\"small\"\n                                    className={classes.btnTable}\n                                    startIcon={<BlockTwoToneIcon />}\n                                >\n                                    Block\n                                </Button>\n                            </Grid>\n                            {*/}\n                    \n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <br />\n            <Divider className={classes.divider} />\n            <br />\n          \n            \n        </>\n    );\n};\n\nexport default BetListItem;\n","import * as React from 'react';\n\n// material-ui\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { LocalizationProvider, DateTimePicker } from '@material-ui/lab';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\n\n// assets\nimport DateRangeIcon from '@material-ui/icons/DateRange';\n\n//-----------------------|| CUSTOM DATETIME ||-----------------------//\n\nconst CustomDateTime = ( { value, setValue } ) => {\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DateTimePicker\n                indicatorColor=\"primary\"\n                renderInput={(props) => <TextField fullWidth {...props} helperText=\"\" />}\n                label=\"Time Limit\"\n                value={value}\n                onChange={(newValue) => {\n                    setValue(newValue);\n                }}\n                sx={{\n                    '& .MuiTabs-flexContainer .MuiTabs-indicator': {\n                        bgcolor: 'primary.main'\n                    }\n                }}          \n            />\n        </LocalizationProvider>\n    );\n};\n\nexport default CustomDateTime;\n","\n// material-ui\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography, FormControl, FormControlLabel, Grid, Radio, RadioGroup } from '@material-ui/core';\n\nimport React, {useState, useEffect, useRef, useContext} from 'react';\nimport GameContext from '../../../contexts/GameContext';\nimport fct from '../../../utils/fct.js';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { useDispatch } from 'react-redux';\n// project imports\n\n\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport useAuth from '../../../hooks/useAuth';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\nimport CustomDateTime from './CustomDateTime';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { gridSpacing } from '../../../store/constant';\n\n//===============================|| UI DIALOG - FORMS ||===============================//\n\nexport default function AnswerCatalogue({...props}) {\n    const { catalogue_answers, setCatalogue_answers } = props;\n    \n    const addAnswer = () => {\n        if (catalogue_answers.length > 32)\n            return;\n\n        let tmp = [...catalogue_answers];\n        tmp.push({title:'',odds:2});\n        \n        setCatalogue_answers(tmp);\n    };\n\n    const updateAnswer = (e,field,index) => {\n        let tmp = [...catalogue_answers];\n        tmp[index][field] = e.target.value;\n        \n        setCatalogue_answers(tmp);\n    };\n    \n\n    useEffect(() => {\n    }, []);\n    \n    return (\n        <>\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} lg={6}>\n                <Typography variant=\"h4\">\n                    Answers \n                </Typography>\n            </Grid>\n        </Grid>\n        <br />\n    \n        <Grid container spacing={1} >\n            {catalogue_answers.map((answer, i) => \n                (<React.Fragment key={i}>\n                <Grid item xs={8} lg={10} >\n                    <TextField onChange={e => updateAnswer(e,'title', i)} fullWidth id=\"outlined-basic-size-small\" label={'Answer  ' + (i + 1)} size=\"small\" defaultValue=\"\" inputProps={{ maxLength: 64 }}/>     \n                </Grid>\n                <Grid item xs={4} lg={2} >         \n                    <TextField onChange={e => updateAnswer(e,'odds', i)} fullWidth id=\"outlined-basic-size-small\" label={'Odds  ' + (i + 1)} type='number' size=\"small\" defaultValue=\"2\" inputProps={{ maxLength: 10 }}/>          \n                </Grid>\n                </React.Fragment>)\n            )}\n            \n            \n            <Grid item xs={12} textAlign={'center'}>\n                <Button onClick={addAnswer}>\n                    <IconCirclePlus stroke={1.5} size=\"3rem\" />\n                </Button>\n                \n            </Grid>\n            \n        </Grid>\n    \n        </>\n    );\n}\n","\n// material-ui\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography, FormControl, FormControlLabel, Grid, Radio, RadioGroup, Slider } from '@material-ui/core';\n\nimport React, {useState, useEffect, useRef, useContext} from 'react';\nimport GameContext from '../../../contexts/GameContext';\nimport fct from '../../../utils/fct.js';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { useDispatch } from 'react-redux';\n// project imports\nimport { gridSpacing } from '../../../store/constant';\n\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport useAuth from '../../../hooks/useAuth';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\nimport CustomDateTime from './CustomDateTime';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { IconCirclePlus } from '@tabler/icons';\n\n//===============================|| UI DIALOG - FORMS ||===============================//\nfunction valueText(value) {\n    return `${value}°C`;\n}\n\n\nexport default function AnswerScale(props) {\n    const { scale_options, setScale_options } = props;  \n    const [ currentValue, setCurrentValue ] = useState(0);\n\n    return (\n        <>\n  \n        <Typography variant=\"h4\">\n            Scale \n        </Typography>\n        <br />\n\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={6}>\n                <TextField fullWidth id=\"outlined-basic-size-small\" onChange={e => setScale_options({...scale_options, odds: parseFloat(e.target.value)})}\n                    label={'Odds'} type='number' size=\"small\"  inputProps={{ maxLength: 16 }} defaultValue={scale_options.odds}/>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField fullWidth id=\"outlined-basic-size-small\" onChange={e => setScale_options({...scale_options, winRate: parseInt(e.target.value)})}\n                    label={'Win Percent'} type='number' size=\"small\"  inputProps={{ maxLength: 16 }} defaultValue={scale_options.winRate}/>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <TextField fullWidth id=\"outlined-basic-size-small\" onChange={e => setScale_options({...scale_options, step: parseFloat(e.target.value)})}\n                    label={'Step'} type='number' size=\"small\"  inputProps={{ maxLength: 16 }} defaultValue={scale_options.step}/>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <TextField fullWidth id=\"outlined-basic-size-small\" onChange={e => setScale_options({...scale_options, min: parseFloat(e.target.value)})}\n                    label={'Min'} type='number' size=\"small\"  inputProps={{ maxLength: 16 }} defaultValue={scale_options.min}/>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <TextField fullWidth id=\"outlined-basic-size-small\" onChange={e => setScale_options({...scale_options, max: parseFloat(e.target.value)})}\n                    label={'Max'} type='number' size=\"small\"  inputProps={{ maxLength: 16 }} defaultValue={scale_options.max}/>\n            </Grid>\n        </Grid>\n        <br />\n\n        <Typography variant=\"h4\">\n            Preview \n        </Typography>\n        <br />\n\n    \n            \n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} container spacing={2} alignItems=\"center\" sx={{ mt: 2.5 }}>\n            \n                <Grid item>\n                    <Typography variant=\"h6\" color=\"primary\">\n                        {scale_options.min}\n                    </Typography>\n                </Grid>\n                <Grid item xs>\n                   <Slider value={currentValue} onChange={e => setCurrentValue(parseFloat(e.target.value))} \n                        key=\"slider1\" getAriaValueText={valueText} valueLabelDisplay=\"on\" \n                        min={scale_options.min} max={scale_options.max} step={scale_options.step}/>\n                </Grid>\n                <Grid item>\n                    <Typography variant=\"h6\" color=\"primary\">\n                        {scale_options.max}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n              \n           \n\n       \n    \n        </>\n    );\n}\n","\n// material-ui\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, \n    DialogTitle, TextField, Typography, FormControl, FormControlLabel, \n    Grid, Radio, RadioGroup, CircularProgress } from '@material-ui/core';\n\nimport React, {useState, useEffect, useRef, useContext} from 'react';\nimport GameContext from '../../../contexts/GameContext';\nimport fct from '../../../utils/fct.js';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { useDispatch } from 'react-redux';\n// project imports\n\n\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport useAuth from '../../../hooks/useAuth';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\nimport CustomDateTime from './CustomDateTime';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { IconCirclePlus } from '@tabler/icons';\nimport AnswerCatalogue from './AnswerCatalogue';\nimport AnswerScale from './AnswerScale';\n\n//===============================|| UI DIALOG - FORMS ||===============================//\n\nexport default function AddBetDialog({...props}) {\n    const { game } = useContext(GameContext);\n    const [ open, setOpen ] = React.useState(false);\n    const [ isLoading, setIsLoading ] = useState(false);\n    const dispatch = useDispatch();\n\n    const [ desc, setDesc ] = React.useState('');\n    const [ title, setTitle ] = React.useState('');\n    const [ timeLimit, setTimeLimit ] = React.useState(new Date());\n    const [ betType, setBetType ] = React.useState('catalogue');\n\n    const [ catalogue_answers, setCatalogue_answers ] = React.useState([{title:'',odds:2},{title:'',odds:2}]);\n    const [ scale_options, setScale_options ] = React.useState({step: 1, min: 2, max: 10, odds: 2, winRate: 50});\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const createBet = async () => {  \n        setIsLoading(true);\n\n        await fct.sleep(1000);\n        try {\n            const tempDate = new Date(timeLimit);\n            tempDate.setSeconds(0);\n            const obj = { gameId: game.id, betType, title, desc, timeLimit: tempDate };\n            if (betType == 'catalogue') obj.catalogue_answers = catalogue_answers;\n            if (betType == 'scale') obj.scale_options = scale_options;\n\n            const response = await axios.post(config.gameHosts[game.serverId] + '/v1/bets/', obj);\n            \n            dispatch({ type: SNACKBAR_OPEN, open: true, message: 'Successfully added Bet', \n                variant: 'alert', alertSeverity: 'success', close: true });\n\n            setIsLoading(false);\n            setOpen(false);\n        } catch (e) {\n            setIsLoading(false);\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\n                variant: 'alert', alertSeverity: 'error', close: true });\n         }\n    };\n\n    return (\n        <Grid container justifyContent=\"center\">\n            <Button style={{width:'100%'}} variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n                Create A New Bet\n            </Button>\n\n            <Dialog fullWidth={true} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" >\n                <DialogTitle id=\"form-dialog-title\">\n                    <Typography style={{fontSize:'1.7em', fontWeight: 'bold'}}>Create a new bet</Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {/*}<DialogContentText>\n                        <Typography variant=\"body2\">\n                        </Typography>\n                    </DialogContentText>{*/}\n                \n                   \n                    <Grid container spacing={1}>\n                        <Grid item xs={12} lg={6}>\n                            <TextField fullWidth onChange={(e) => setTitle(e.target.value)} id=\"outlined-basic\" label=\"Title\" />\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                            <CustomDateTime value={timeLimit} setValue={setTimeLimit}></CustomDateTime>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                    fullWidth\n                                    value={desc}\n                                    onChange={(e) => setDesc(e.target.value)}\n                                    id=\"outlined-multiline-flexible\"\n                                    label=\"Description\"\n                                    multiline\n                                    rows={3}\n                                />\n                        </Grid>\n                        \n                    </Grid>\n                    \n                    <br /><br /><br />\n\n                    <Grid container justifyContent=\"center\" spacing={3}>\n                        <FormControl>\n                            <RadioGroup\n                                row\n                                aria-label=\"gender\"\n                                value={betType}\n                                onChange={(e) => setBetType(e.target.value)}\n                                name=\"row-radio-buttons-group\"\n                            >\n                                <FormControlLabel value=\"catalogue\" control={<Radio />} label=\"Catalogue\" />\n                                <FormControlLabel value=\"scale\" control={<Radio />} label=\"Scale\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <br />\n                    \n                    { betType == 'catalogue' ? <AnswerCatalogue catalogue_answers={catalogue_answers} setCatalogue_answers={setCatalogue_answers}/> : ''}\n                    { betType == 'scale' ? <AnswerScale scale_options={scale_options} setScale_options={setScale_options}/> : ''}\n                    \n                </DialogContent>\n                <DialogActions sx={{ pr: 2.5 }}>\n                    <Button onClick={handleClose} color=\"error\">\n                        Cancel\n                    </Button>\n                    <Button variant=\"contained\" size=\"small\" onClick={createBet} color=\"primary\">\n                        {isLoading ? (<> <CircularProgress color=\"secondary\"  size=\"1.7em\" /></>) : ('Create') }  \n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Grid>\n    );\n}\n","import React, {useState, useEffect, useRef, useContext} from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport GameContext from '../../../contexts/GameContext';\nimport fct from '../../../utils/fct.js';\nimport BetListItem from './BetListItem';\n\nimport { Divider, Typography, CardMedia, Stack, Switch, Pagination, Grid, Button, InputAdornment, OutlinedInput, CircularProgress, Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { useDispatch, useSelector } from 'react-redux';\n// project imports\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport AddBetDialog from './AddBetDialog';\nimport { gridSpacing } from '../../../store/constant';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport useAuth from '../../../hooks/useAuth';\nimport axios from '../../../utils/axios';\nimport config from '../../../config';\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SecondaryAction from './../../../ui-component/cards/CardSecondaryAction';\nimport Transitions from '../../../ui-component/extended/Transitions';\nimport image from '../../../assets/images/profile/img-profile-bg.png';\n\n// assets\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\n//-----------------------|| PROFILE 1 - PROFILE ||-----------------------//\n\n\nconst Bets = () => {\n    const { game, socket, privileges, betsPage, setBetsPage  } = useContext(GameContext);\n    const { user } = useAuth();\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(false);\n\n    const getBetsPage = async () => {\n        setIsLoading(true);\n\n        try {\n            const response = await axios.get(config.apiHost + '/v1/bets/', { params: { gameId: game.id, sortBy: '-_createdAt', limit: 5 , page: betsPage.index } });\n\n            await fct.sleep(500);\n            setBetsPage({...betsPage, items: response.data.results,maxIndex: response.data.totalPages});\n            setIsLoading(false);\n        } catch (e) {\n            setIsLoading(false);\n            console.log(e);\n            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  e.response ? e.response.data.message : e.toString(),\n                variant: 'alert', alertSeverity: 'error', close: true });\n        }\n    }\n\n    const handlePageChange = async (a,b,c) => {\n        console.log(a,b,c);\n        setBetsPage({...betsPage, index: b});\n    }\n\n    useEffect(() => {\n        getBetsPage();\n    }, [betsPage.index]);\n\n    return (\n        <>  \n        {(privileges.admin || privileges.mod) ? (        \n            <>\n            <AddBetDialog/>\n            <br />\n            </>\n        ) : ''}    \n        \n        {isLoading ? (\n           \n            <>\n            <br />\n            <Grid container justifyContent=\"center\">\n                \n                <CircularProgress color=\"secondary\" size=\"10em\"  />\n                \n            </Grid>\n            </>\n         \n        ) : ''} \n        \n        {!isLoading && betsPage.items.length > 0 ? (\n            <>\n                {betsPage.items.map((bet) => (\n                    <BetListItem key={bet.id} bet={bet} />  \n                ))}\n                <br />\n                <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\n                    <Grid item xs={12}>\n                        <Pagination page={betsPage.index} onChange={handlePageChange} count={betsPage.maxIndex} color=\"primary\" />\n                    </Grid>\n                </Grid>\n            </>\n           \n        ) : ''}\n\n        {!isLoading && betsPage.items.length == 0 ? (\n            <>  \n                <br />\n                <Grid container direction=\"column\" spacing={2} alignItems=\"center\">\n                    <Grid item xs={12}>\n                       <Typography variant=\"h3\">No bets to show.</Typography>\n                    </Grid>\n                </Grid>\n            </>\n           \n        ) : ''}\n\n  \n        \n\n        </>\n    );\n};\n\nexport default Bets;\n"],"sourceRoot":""}