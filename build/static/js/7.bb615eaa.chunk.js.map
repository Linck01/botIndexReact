{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","ui-component/cards/AuthFooter.js","hooks/useScriptRef.js","../node_modules/@hcaptcha/react-hcaptcha/dist/index.js","../node_modules/@hcaptcha/react-hcaptcha/dist/utils.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","utils/password-strength.js","assets/images/icons/social-google.svg","views/pages/authentication/jwt-forms/JWTRegister.js","views/pages/authentication/Register.js"],"names":["AuthWrapper1","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","children","other","classes","className","contentClass","AuthFooter","direction","justifyContent","useScriptRef","scripted","useRef","useEffect","current","_interopRequireDefault","require","_typeof2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","React","generateQuery","onLoadListeners","apiScriptRequested","HCaptcha","_React$Component","_super","props","_this","renderCaptcha","bind","resetCaptcha","removeCaptcha","isReady","handleOnLoad","handleSubmit","handleExpire","handleError","handleOpen","handleClose","handleChallengeExpired","isApiReady","hcaptcha","ref","createRef","state","isRemoved","elementId","id","captchaId","key","value","_this$props","apihost","assethost","endpoint","host","imghost","hl","languageOverride","reCaptchaCompat","reportapi","sentry","custom","params","length","undefined","window","hcaptchaOnLoad","filter","listener","domain","script","document","createElement","src","concat","async","query","head","appendChild","mountCaptchaScript","recaptchacompat","push","reset","remove","nextProps","nextState","prevProps","_this2","every","onReady","renderParams","Object","assign","render","setState","callback","_this3","onLoad","event","onVerify","_this$state","getResponse","getRespKey","onExpire","onError","_this$state2","onOpen","onClose","onChalExpired","opts","execute","Component","module","exports","_slicedToArray2","entries","_ref","_ref2","map","_ref3","_ref4","encodeURIComponent","join","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","i","__esModule","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","arrayLikeToArray","o","minLen","n","slice","name","from","test","len","arr2","TypeError","strengthColor","count","label","color","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","strengths","RegExp","hasNumber","hasSpecial","hasMixed","redButton","fontSize","fontWeight","dark","main","grey","border","borderColor","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","JWTRegister","others","scriptedRef","useMediaQuery","useSelector","customization","useState","showPassword","setShowPassword","checked","setChecked","colors","useColor","strength","setStrength","level","setLevel","passwordMatch","setPasswordMatch","captchaToken","setCaptchaToken","useAuth","register","dispatch","sendVerificationEmail","useDispatch","history","useHistory","location","useLocation","handleClickShowPassword","handleMouseDownPassword","preventDefault","changePassword","temp","checkPasswordConfirm","pass1","pass2","Fragment","Grid","container","item","xs","alignItems","Box","mb","Typography","variant","initialValues","username","email","password","passwordConfirm","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","type","SNACKBAR_OPEN","open","message","alertSeverity","close","queryString","parse","search","fromLocation","success","console","error","response","data","errors","handleBlur","handleChange","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","InputLabel","htmlFor","OutlinedInput","onBlur","onChange","inputProps","notchedOutline","FormHelperText","target","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","width","height","borderRadius","errorDark","FormControlLabel","control","Checkbox","component","Link","to","sitekey","config","hCaptchaSiteKey","token","ekey","handleCaptchaVerificationSuccess","mt","AnimateButton","Button","disableElevation","disabled","size","Register","useTheme","matchDownSM","sx","m","sm","Logo","Stack","secondary","gutterBottom","textAlign","Divider","RouterLink","textDecoration"],"mappings":"oIAAA,WAKMA,EAAeC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAC/CC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkBH,EAAME,QAAQE,WAAWC,QAAUL,EAAME,QAAQI,QAAQC,MAC1GC,UAAW,YAGAV,O,0GCATW,EAAYC,aAAW,SAACV,GAAD,YAAY,CACrCW,MAAI,GACAC,SAAU,QACV,QAAS,CACLC,SAAU,EACVC,UAAW,QAJf,cAMCd,EAAMe,YAAYC,KAAK,MAAQ,CAC5BC,OAAQ,SAPZ,cASCjB,EAAMe,YAAYC,KAAK,MAAQ,CAC5BJ,SAAU,UAVd,GAaJM,QAAQ,aACJC,QAASnB,EAAMoB,QAAQ,GAAK,eAC3BpB,EAAMe,YAAYC,KAAK,MAAQ,CAC5BG,QAASnB,EAAMoB,QAAQ,GAAK,oBAqBzBC,IAdS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBAC1CC,EAAUf,IAEhB,OACI,cAAC,IAAD,yBAAUgB,UAAWD,EAAQb,KAAMe,aAAcF,EAAQN,SAAaK,GAAtE,aACKD,O,iCCvCb,yBAoBeK,IAbI,WACf,OACI,cAAC,IAAD,CAAOC,UAAU,MAAMC,eAAe,oB,iCCT9C,WAiBeC,IAbM,WACjB,IAAMC,EAAWC,kBAAO,GASxB,OAPAC,qBACI,kBAAM,WACFF,EAASG,SAAU,KAEvB,IAGGH,I,iCCZX,IAAII,EAAyBC,EAAQ,IAEjCC,EAAWF,EAAuBC,EAAQ,MAE1CE,EAAmBH,EAAuBC,EAAQ,MAElDG,EAAgBJ,EAAuBC,EAAQ,MAE/CI,EAA0BL,EAAuBC,EAAQ,MAEzDK,EAAaN,EAAuBC,EAAQ,MAE5CM,EAA8BP,EAAuBC,EAAQ,MAE7DO,EAAmBR,EAAuBC,EAAQ,MAEtD,SAASQ,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAiF,OAA3EC,KAAKC,UAAUC,SAASC,KAAKP,QAAQC,UAAUG,KAAM,IAAI,iBAAyB,EAAQ,MAAOI,GAAK,OAAO,GAFzPC,GAA6B,OAAO,WAAkC,IAAuDC,EAAnDC,GAAQ,EAAIf,EAAgB,SAAaE,GAAkB,GAAIC,EAA2B,CAAE,IAAIa,GAAY,EAAIhB,EAAgB,SAAaiB,MAAMC,YAAaJ,EAASV,QAAQC,UAAUU,EAAOI,UAAWH,QAAqBF,EAASC,EAAMK,MAAMH,KAAME,WAAc,OAAO,EAAIpB,EAA2B,SAAakB,KAAMH,IAI/c,IAAIO,EAAQ5B,EAAQ,GAGhB6B,EADW7B,EAAQ,KACM6B,cAGzBC,EAAkB,GAClBC,GAAqB,EAwBrBC,EAAwB,SAAUC,IACpC,EAAI5B,EAAU,SAAa2B,EAAUC,GAErC,IAAIC,EAAS1B,EAAawB,GAE1B,SAASA,EAASG,GAChB,IAAIC,GAEJ,EAAIlC,EAAgB,SAAasB,KAAMQ,IACvCI,EAAQF,EAAOhB,KAAKM,KAAMW,IAEpBE,cAAgBD,EAAMC,cAAcC,MAAK,EAAIlC,EAAuB,SAAagC,IACvFA,EAAMG,aAAeH,EAAMG,aAAaD,MAAK,EAAIlC,EAAuB,SAAagC,IACrFA,EAAMI,cAAgBJ,EAAMI,cAAcF,MAAK,EAAIlC,EAAuB,SAAagC,IACvFA,EAAMK,QAAUL,EAAMK,QAAQH,MAAK,EAAIlC,EAAuB,SAAagC,IAE3EA,EAAMM,aAAeN,EAAMM,aAAaJ,MAAK,EAAIlC,EAAuB,SAAagC,IACrFA,EAAMO,aAAeP,EAAMO,aAAaL,MAAK,EAAIlC,EAAuB,SAAagC,IACrFA,EAAMQ,aAAeR,EAAMQ,aAAaN,MAAK,EAAIlC,EAAuB,SAAagC,IACrFA,EAAMS,YAAcT,EAAMS,YAAYP,MAAK,EAAIlC,EAAuB,SAAagC,IACnFA,EAAMU,WAAaV,EAAMU,WAAWR,MAAK,EAAIlC,EAAuB,SAAagC,IACjFA,EAAMW,YAAcX,EAAMW,YAAYT,MAAK,EAAIlC,EAAuB,SAAagC,IACnFA,EAAMY,uBAAyBZ,EAAMY,uBAAuBV,MAAK,EAAIlC,EAAuB,SAAagC,IACzG,IAAIa,EAAiC,qBAAbC,SAQxB,OAPAd,EAAMe,IAAMvB,EAAMwB,YAClBhB,EAAMiB,MAAQ,CACZJ,WAAYA,EACZK,WAAW,EACXC,UAAWpB,EAAMqB,GACjBC,UAAW,IAENrB,EAiQT,OA9PA,EAAIjC,EAAa,SAAa6B,EAAU,CAAC,CACvC0B,IAAK,oBACLC,MAAO,WAEL,IAAIC,EAAcpC,KAAKW,MACnB0B,EAAUD,EAAYC,QACtBC,EAAYF,EAAYE,UACxBC,EAAWH,EAAYG,SACvBC,EAAOJ,EAAYI,KACnBC,EAAUL,EAAYK,QACtBC,EAAKN,EAAYO,iBACjBC,EAAkBR,EAAYQ,gBAC9BC,EAAYT,EAAYS,UACxBC,EAASV,EAAYU,OACrBC,EAASX,EAAYW,OACR/C,KAAK6B,MAAMJ,WAuB1BzB,KAAKa,iBAnBAN,GA3EY,WACvB,IAAIyC,EAAS9C,UAAU+C,OAAS,QAAsBC,IAAjBhD,UAAU,GAAmBA,UAAU,GAAK,GACjFK,GAAqB,EAErB4C,OAAOC,eAAiB,WAEtB9C,EAAkBA,EAAgB+C,QAAO,SAAUC,GAEjD,OADAA,KACO,MAIX,IAAIC,EAASP,EAAOX,SAAW,iCACxBW,EAAOX,QACd,IAAImB,EAASC,SAASC,cAAc,UACpCF,EAAOG,IAAM,GAAGC,OAAOL,EAAQ,mDAC/BC,EAAOK,OAAQ,EACf,IAAIC,EAAQzD,EAAc2C,GAC1BQ,EAAOG,KAAiB,KAAVG,EAAe,IAAIF,OAAOE,GAAS,GACjDL,SAASM,KAAKC,YAAYR,GA0DlBS,CAAmB,CACjB5B,QAASA,EACTC,UAAWA,EACXC,SAAUA,EACVG,GAAIA,EACJF,KAAMA,EACNC,QAASA,EACTyB,iBAAqC,IAApBtB,EAA4B,MAAQ,KACrDC,UAAWA,EACXC,OAAQA,EACRC,OAAQA,IAKZzC,EAAgB6D,KAAKnE,KAAKkB,iBAK7B,CACDgB,IAAK,uBACLC,MAAO,WACL,IAAIF,EAAYjC,KAAK6B,MAAMI,UAEtBjC,KAAKiB,YAKVS,SAAS0C,MAAMnC,GACfP,SAAS2C,OAAOpC,MAEjB,CACDC,IAAK,wBACLC,MAAO,SAA+BmC,EAAWC,GAE/C,OAAIvE,KAAK6B,MAAMJ,aAAe8C,EAAU9C,YAAczB,KAAK6B,MAAMC,YAAcyC,EAAUzC,YAM1F,CACDI,IAAK,qBACLC,MAAO,SAA4BqC,GACjC,IAAIC,EAASzE,KAGF,CAAC,UAAW,OAAQ,QAAS,WAAY,mBAAoB,YAEvD0E,OAAM,SAAUxC,GAC/B,OAAOsC,EAAUtC,KAASuC,EAAO9D,MAAMuB,OAIvClC,KAAKgB,eAAc,WACjByD,EAAO5D,qBAIZ,CACDqB,IAAK,gBACLC,MAAO,SAAuBwC,GAE5B,GADiB3E,KAAK6B,MAAMJ,WAC5B,CACA,IAAImD,EAAeC,OAAOC,OAAO,CAC/B,gBAAiB9E,KAAKsB,WACtB,iBAAkBtB,KAAKuB,YACvB,iBAAkBvB,KAAKqB,YACvB,uBAAwBrB,KAAKwB,uBAC7B,mBAAoBxB,KAAKoB,aACzB,SAAYpB,KAAKmB,cAChBnB,KAAKW,MAAO,CACb+B,GAAI1C,KAAKW,MAAM+B,IAAM1C,KAAKW,MAAMgC,iBAChCA,sBAAkBO,IAGhBjB,EAAYP,SAASqD,OAAO/E,KAAK2B,IAAIrD,QAASsG,GAClD5E,KAAKgF,SAAS,CACZlD,WAAW,EACXG,UAAWA,IACV,WACD0C,GAAWA,UAGd,CACDzC,IAAK,eACLC,MAAO,WACL,IAAIF,EAAYjC,KAAK6B,MAAMI,UAEtBjC,KAAKiB,WAKVS,SAAS0C,MAAMnC,KAEhB,CACDC,IAAK,gBACLC,MAAO,SAAuB8C,GAC5B,IAAIhD,EAAYjC,KAAK6B,MAAMI,UAEtBjC,KAAKiB,WAIVjB,KAAKgF,SAAS,CACZlD,WAAW,IACV,WACDJ,SAAS2C,OAAOpC,GAChBgD,GAAYA,SAGf,CACD/C,IAAK,eACLC,MAAO,WACL,IAAI+C,EAASlF,KAEbA,KAAKgF,SAAS,CACZvD,YAAY,IACX,WAEDyD,EAAOrE,eAAc,WAEnB,IAAIsE,EAASD,EAAOvE,MAAMwE,OACtBA,GAAQA,YAIjB,CACDjD,IAAK,eACLC,MAAO,SAAsBiD,GAC3B,IAAIC,EAAWrF,KAAKW,MAAM0E,SACtBC,EAActF,KAAK6B,MACnBC,EAAYwD,EAAYxD,UACxBG,EAAYqD,EAAYrD,UACJ,qBAAbP,UAA4BI,GAKvCuD,EAJY3D,SAAS6D,YAAYtD,GAEtBP,SAAS8D,WAAWvD,MAIhC,CACDC,IAAK,eACLC,MAAO,WACL,IAAIsD,EAAWzF,KAAKW,MAAM8E,SACtBxD,EAAYjC,KAAK6B,MAAMI,UAEtBjC,KAAKiB,YAIVS,SAAS0C,MAAMnC,GAEXwD,GAAUA,OAEf,CACDvD,IAAK,cACLC,MAAO,SAAqBiD,GAC1B,IAAIM,EAAU1F,KAAKW,MAAM+E,QACrBzD,EAAYjC,KAAK6B,MAAMI,UAEtBjC,KAAKiB,YAIVS,SAAS0C,MAAMnC,GAEXyD,GAASA,EAAQN,MAEtB,CACDlD,IAAK,UACLC,MAAO,WACL,IAAIwD,EAAe3F,KAAK6B,MACpBJ,EAAakE,EAAalE,WAC1BK,EAAY6D,EAAa7D,UAC7B,OAAOL,IAAeK,IAEvB,CACDI,IAAK,aACLC,MAAO,WACAnC,KAAKiB,WAAcjB,KAAKW,MAAMiF,QAInC5F,KAAKW,MAAMiF,WAEZ,CACD1D,IAAK,cACLC,MAAO,WACAnC,KAAKiB,WAAcjB,KAAKW,MAAMkF,SAInC7F,KAAKW,MAAMkF,YAEZ,CACD3D,IAAK,yBACLC,MAAO,WACAnC,KAAKiB,WAAcjB,KAAKW,MAAMmF,eAInC9F,KAAKW,MAAMmF,kBAEZ,CACD5D,IAAK,UACLC,MAAO,WACL,IAAI4D,EAAO7F,UAAU+C,OAAS,QAAsBC,IAAjBhD,UAAU,GAAmBA,UAAU,GAAK,KAC3E+B,EAAYjC,KAAK6B,MAAMI,UAE3B,GAAKjC,KAAKiB,UAQV,OAJI8E,GAA2C,YAAnC,EAAItH,EAAQ,SAAasH,KACnCA,EAAO,MAGFrE,SAASsE,QAAQ/D,EAAW8D,KAEpC,CACD7D,IAAK,SACLC,MAAO,WACL,IAAIJ,EAAY/B,KAAK6B,MAAME,UAC3B,OAAoB3B,EAAMsD,cAAc,MAAO,CAC7C/B,IAAK3B,KAAK2B,IACVK,GAAID,QAIHvB,EAhSmB,CAiS1BJ,EAAM6F,WAERC,EAAOC,QAAU3F,G,iCCtVjB,IAEI4F,EAFyB5H,EAAQ,GAEfD,CAAuBC,EAAQ,MAmBrD0H,EAAOC,QAAU,CACf9F,cAlBF,SAAuB2C,GACrB,OAAO6B,OAAOwB,QAAQrD,GAAQK,QAAO,SAAUiD,GAC7C,IAAIC,GAAQ,EAAIH,EAAe,SAAaE,EAAM,GAE9CnE,GADMoE,EAAM,GACJA,EAAM,IAElB,OAAOpE,IAAmB,IAAVA,KACfqE,KAAI,SAAUC,GACf,IAAIC,GAAQ,EAAIN,EAAe,SAAaK,EAAO,GAC/CvE,EAAMwE,EAAM,GACZvE,EAAQuE,EAAM,GAElB,MAAO,GAAG9C,OAAO+C,mBAAmBzE,GAAM,KAAK0B,OAAO+C,mBAAmBxE,OACxEyE,KAAK,Q,oBCnBV,IAAIC,EAAiB,EAAQ,KAEzBC,EAAuB,EAAQ,KAE/BC,EAA6B,EAAQ,KAErCC,EAAkB,EAAQ,KAM9Bd,EAAOC,QAJP,SAAwBc,EAAKC,GAC3B,OAAOL,EAAeI,IAAQH,EAAqBG,EAAKC,IAAMH,EAA2BE,EAAKC,IAAMF,KAItGd,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQgB,YAAa,G,kBCTxEjB,EAAOC,QAJP,SAAyBc,GACvB,GAAIG,MAAMC,QAAQJ,GAAM,OAAOA,GAIjCf,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQgB,YAAa,G,kBCyBxEjB,EAAOC,QA9BP,SAA+Bc,EAAKC,GAClC,IAAII,EAAY,MAAPL,EAAc,KAAyB,qBAAXM,QAA0BN,EAAIM,OAAOC,WAAaP,EAAI,cAE3F,GAAU,MAANK,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAG5H,KAAKuH,KAAQW,GAAMH,EAAKH,EAAGQ,QAAQC,QAC9CJ,EAAKxD,KAAKsD,EAAGtF,QAET+E,GAAKS,EAAK1E,SAAWiE,GAH4BU,GAAK,IAK5D,MAAOI,GACPH,GAAK,EACLH,EAAKM,EACL,QACA,IACOJ,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,IAITzB,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQgB,YAAa,G,oBC/BxE,IAAIc,EAAmB,EAAQ,KAW/B/B,EAAOC,QATP,SAAqC+B,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAOD,EAAiBC,EAAGC,GACtD,IAAIC,EAAIvD,OAAOrF,UAAUC,SAASC,KAAKwI,GAAGG,MAAM,GAAI,GAEpD,MADU,WAAND,GAAkBF,EAAEjI,cAAamI,EAAIF,EAAEjI,YAAYqI,MAC7C,QAANF,GAAqB,QAANA,EAAoBhB,MAAMmB,KAAKL,GACxC,cAANE,GAAqB,2CAA2CI,KAAKJ,GAAWH,EAAiBC,EAAGC,QAAxG,IAIFjC,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQgB,YAAa,G,kBCFxEjB,EAAOC,QAVP,SAA2Bc,EAAKwB,IACnB,MAAPA,GAAeA,EAAMxB,EAAIhE,UAAQwF,EAAMxB,EAAIhE,QAE/C,IAAK,IAAIiE,EAAI,EAAGwB,EAAO,IAAItB,MAAMqB,GAAMvB,EAAIuB,EAAKvB,IAC9CwB,EAAKxB,GAAKD,EAAIC,GAGhB,OAAOwB,GAITxC,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQgB,YAAa,G,kBCPxEjB,EAAOC,QAJP,WACE,MAAM,IAAIwC,UAAU,8IAItBzC,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQgB,YAAa,G,iCCLxE,yFAsBayB,EAAgB,SAACC,GAC1B,OAAIA,EAAQ,EAAU,CAAEC,MAAO,OAAQC,MAAO5G,IAAM6G,WAChDH,EAAQ,EAAU,CAAEC,MAAO,OAAQC,MAAO5G,IAAM8G,aAChDJ,EAAQ,EAAU,CAAEC,MAAO,SAAUC,MAAO5G,IAAM+G,YAClDL,EAAQ,EAAU,CAAEC,MAAO,OAAQC,MAAO5G,IAAMgH,aAChDN,EAAQ,EAAU,CAAEC,MAAO,SAAUC,MAAO5G,IAAMiH,kBAAtD,GAISC,EAAoB,SAAClH,GAC9B,IAAImH,EAAY,EAMhB,OALInH,EAAMc,OAAS,GAAGqG,IAClBnH,EAAMc,OAAS,GAAGqG,IA3BR,SAACnH,GACf,OAAO,IAAIoH,OAAO,SAASf,KAAKrG,GA2B5BqH,CAAUrH,IAAQmH,IAlBP,SAACnH,GAChB,OAAO,IAAIoH,OAAO,qBAAqBf,KAAKrG,GAkBxCsH,CAAWtH,IAAQmH,IAxBV,SAACnH,GACd,OAAO,IAAIoH,OAAO,SAASf,KAAKrG,IAAU,IAAIoH,OAAO,SAASf,KAAKrG,GAwB/DuH,CAASvH,IAAQmH,IACdA,I,6WCtCI,I,wGC8CTzM,EAAYC,aAAW,SAACV,GAAD,MAAY,CACrCuN,UAAU,aACNC,SAAU,OACVC,WAAY,IACZxN,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkBH,EAAME,QAAQwN,KAAKC,KAAO3N,EAAME,QAAQ0N,KAAK,IAC9FC,OAAQ,YACRC,YAAoC,SAAvB9N,EAAME,QAAQC,KAAkBH,EAAME,QAAQwN,KAAKnN,MAAQ,GAAKP,EAAME,QAAQ0N,KAAK,KAChGjB,MAAO3M,EAAME,QAAQ0N,KAAK,KAC1BG,cAAe,OACf,UAAW,CACP9N,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkBH,EAAME,QAAQwN,KAAKnN,MAAQ,GAAKP,EAAME,QAAQI,QAAQC,QAE1GP,EAAMe,YAAYC,KAAK,MAAQ,CAC5BwM,SAAU,aAGlBQ,YAAa,CACTnN,SAAU,GAEdoN,SAAU,CACNC,OAAQ,QACRjN,OAAQjB,EAAMoB,QAAQ,GACtBD,QAAS,WACT2M,YAC2B,SAAvB9N,EAAME,QAAQC,KAAkBH,EAAME,QAAQwN,KAAKnN,MAAQ,GAAK,cAAgBP,EAAME,QAAQ0N,KAAK,KAAO,cAC9GjB,MAAO3M,EAAME,QAAQ0N,KAAK,KAAO,aACjCH,WAAY,KAEhBU,UAAU,aACNC,YAAa,QACZpO,EAAMe,YAAYC,KAAK,MAAQ,CAC5BoN,YAAa,QAGrBC,WAAW,eACJrO,EAAMsO,WAAWC,iBA6XbC,EAvXK,SAAC,GAAmB,IAAdC,EAAa,oBAC7BjN,EAAUf,IACViO,EAAc5M,cAGpB,GAFoB6M,aAAc,SAAC3O,GAAD,OAAWA,EAAMe,YAAYC,KAAK,SAC9C4N,aAAY,SAACnJ,GAAD,OAAWA,EAAMoJ,iBACX7K,IAAM8K,UAAS,IAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BhL,IAAM8K,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACQC,EAAWC,cAAXD,OACR,EAAgCnL,IAAM8K,SAAS,GAA/C,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA0BtL,IAAM8K,SAAS,IAAzC,qBAAOS,GAAP,MAAcC,GAAd,MACA,GAA0CxL,IAAM8K,SAAS,GAAzD,qBAAOW,GAAP,MAAsBC,GAAtB,MACA,GAA0C1L,IAAM8K,SAAS,MAAzD,qBAAQa,GAAR,MAAsBC,GAAtB,MACA,GAA4CC,cAApCC,GAAR,GAAQA,SACFC,IADN,GAAkBC,sBACDC,eACXC,GAAUC,cACVC,GAAWC,cAMXC,GAA0B,WAC5BtB,GAAiBD,IAGfwB,GAA0B,SAACvH,GAC7BA,EAAMwH,kBAGJC,GAAiB,SAAC1K,GACpB,IAAM2K,EAAOzD,YAAkBlH,GAC/BuJ,EAAYoB,GACZlB,GAAShD,YAAckE,KAGrBC,GAAuB,SAACC,EAAOC,IACX,IAAlBpB,IAAuBoB,EAAMhK,QAAU+J,EAAM/J,SAEzC6I,GADAkB,GAASC,IAWrB,OAJA5O,qBAAU,WACNwO,GAAe,YAChB,IAGC,eAAC,IAAMK,SAAP,WACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACpP,UAAU,SAASC,eAAe,SAAST,QAAS,EAApE,SAkCI,cAAC2P,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIF,WAAS,EAACG,WAAW,SAAStP,eAAe,SAAhE,SACI,cAACuP,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,YAApB,8CAUZ,cAAC,IAAD,CAEIC,cAAe,CACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,OAAQ,MAEZC,iBAAkBC,MAAaC,MAAM,CACjCP,SAAUM,MAAaE,IAAI,IAAIC,SAAS,wBACxCR,MAAOK,MAAaL,MAAM,yBAAyBO,IAAI,KAAKC,SAAS,qBACrEP,SAAUI,MAAaE,IAAI,KAAKC,SAAS,0BAG7CC,SAAQ,uCAAE,WAAOC,EAAP,sBAAAC,EAAA,yDAAiBC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,cAAvC,SAEGvD,EAFH,yCAGSc,GAAS,CAAE0C,KAAMC,IAAeC,MAAM,EAAMC,QAAU,2BACzDrB,QAAS,QAASsB,cAAe,QAASC,OAAO,KAJvD,uBAM8BhD,GAASsC,EAAOX,SAAUW,EAAOV,MAAOU,EAAOT,SAAUhC,IANvF,cAUFO,GAAQnI,KAAKgL,IAAYC,MAAM5C,GAAS6C,QAAQC,cAE5CxE,EAAYxM,UACZqQ,EAAU,CAAEY,SAAS,IACrBX,GAAc,IAdhB,kDAiBFY,QAAQC,MAAR,MACI3E,EAAYxM,UACZqQ,EAAU,CAAEY,SAAS,IACrBb,EAAU,CAAET,OAAQ,KAAIyB,SAASC,KAAKX,SAAW,KAAIA,UACrDJ,GAAc,IArBhB,0DAAF,wDAfZ,SAyCK,gBAAGgB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,aAAc3O,EAArC,EAAqCA,aAAc4O,EAAnD,EAAmDA,aAAcC,EAAjE,EAAiEA,QAASxB,EAA1E,EAA0EA,OAA1E,OACG,+CAAMyB,YAAU,EAAC1B,SAAUpN,GAAkB0J,GAA7C,cACI,eAACqF,EAAA,EAAD,CACIC,WAAS,EACTV,MAAOW,QAAQJ,EAAQnC,UAAY+B,EAAO/B,UAC1ChQ,UAAWD,EAAQ6M,WACnBkD,QAAQ,WAJZ,UAMI,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,oCAApB,sBACA,cAACC,EAAA,EAAD,CACIvO,GAAG,oCACH6M,KAAK,WACL1M,MAAOqM,EAAOX,SACdvF,KAAK,WACLkI,OAAQX,EACRY,SAAUX,EACVY,WAAY,CACR9S,QAAS,CACL+S,eAAgB/S,EAAQ+S,mBAInCX,EAAQnC,UAAY+B,EAAO/B,UACxB,eAAC+C,EAAA,EAAD,CAAgBnB,OAAK,EAACzN,GAAG,wCAAzB,UACK,IACA4N,EAAO/B,SAAU,UAK9B,eAACqC,EAAA,EAAD,CACIC,WAAS,EACTV,MAAOW,QAAQJ,EAAQlC,OAAS8B,EAAO9B,OACvCjQ,UAAWD,EAAQ6M,WACnBkD,QAAQ,WAJZ,UAMI,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,oCAApB,2BACA,cAACC,EAAA,EAAD,CACIvO,GAAG,oCACH6M,KAAK,QACL1M,MAAOqM,EAAOV,MACdxF,KAAK,QACLkI,OAAQX,EACRY,SAAUX,EACVY,WAAY,CACR9S,QAAS,CACL+S,eAAgB/S,EAAQ+S,mBAInCX,EAAQlC,OAAS8B,EAAO9B,OACrB,eAAC8C,EAAA,EAAD,CAAgBnB,OAAK,EAACzN,GAAG,wCAAzB,UACK,IACA4N,EAAO9B,MAAO,UAK3B,eAACoC,EAAA,EAAD,CACIC,WAAS,EACTV,MAAOW,QAAQJ,EAAQjC,UAAY6B,EAAO7B,UAC1ClQ,UAAWD,EAAQ6M,WACnBkD,QAAQ,WAJZ,UAMI,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,uCAApB,sBACA,cAACC,EAAA,EAAD,CACIvO,GAAG,uCACH6M,KAAM1D,EAAe,OAAS,WAC9BhJ,MAAOqM,EAAOT,SACdzF,KAAK,WACLQ,MAAM,WACN0H,OAAQX,EACRY,SAAU,SAAC9Q,GACPmQ,EAAanQ,GACbkN,GAAelN,EAAEkR,OAAO1O,OACxB4K,GAAqBpN,EAAEkR,OAAO1O,MAAOqM,EAAOR,kBAEhD8C,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,EAAA,EAAD,CACIC,aAAW,6BACXC,QAASzE,GACT0E,YAAazE,GACb0E,KAAK,MAJT,SAMKlG,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAI7CuF,WAAY,CACR9S,QAAS,CACL+S,eAAgB/S,EAAQ+S,mBAInCX,EAAQjC,UAAY6B,EAAO7B,UACxB,eAAC6C,EAAA,EAAD,CAAgBnB,OAAK,EAACzN,GAAG,gDAAzB,UACK,IACA4N,EAAO7B,SAAU,UAKhB,IAAbtC,GAAqC,IAAnB+C,EAAOT,UACtB,cAACmC,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAAC3C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAAC5P,QAAS,EAAG+P,WAAW,SAAvC,UACI,cAACJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAACG,EAAA,EAAD,CAAK8D,MAAO,GAAIC,OAAQ,EAAGC,aAAc,EAAGnV,gBAAiBsP,GAAM5C,UAEvE,cAACoE,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAACK,EAAA,EAAD,CAAYC,QAAQ,YAAY/D,SAAS,UAAzC,SACK+B,GAAM7C,iBAQ/B,eAACoH,EAAA,EAAD,CACIC,WAAS,EACTV,MAAOW,QAAQJ,EAAQjC,UAAY6B,EAAO7B,UAC1ClQ,UAAWD,EAAQ6M,WACnBkD,QAAQ,WAJZ,UAMI,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,uCAApB,8BACA,cAACC,EAAA,EAAD,CACIvO,GAAG,uCACH6M,KAAM1D,EAAe,OAAS,WAC9BhJ,MAAOqM,EAAOR,gBACd1F,KAAK,kBACLQ,MAAM,mBACN0H,OAAQX,EACRY,SAAU,SAAC9Q,GACPmQ,EAAanQ,GACboN,GAAqByB,EAAOT,SAAUpO,EAAEkR,OAAO1O,QAEnD2O,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,EAAA,EAAD,CACIC,aAAW,6BACXC,QAASzE,GACT0E,YAAazE,GACb0E,KAAK,MAJT,SAMKlG,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAI7CuF,WAAY,CACR9S,QAAS,CACL+S,eAAgB/S,EAAQ+S,mBAInCX,EAAQjC,UAAY6B,EAAO7B,UACxB,eAAC6C,EAAA,EAAD,CAAgBnB,OAAK,EAACzN,GAAG,gDAAzB,UACK,IACA4N,EAAO7B,SAAU,WAKX,IAAlBlC,IACG,cAACqE,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACI,cAAC3C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAAC5P,QAAS,EAAG+P,WAAW,SAAvC,UACI,cAACJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAACG,EAAA,EAAD,CAAK8D,MAAO,GAAIC,OAAQ,EAAGC,aAAc,EAAGnV,gBAAiBkP,EAAOkG,cAExE,cAACtE,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAACK,EAAA,EAAD,CAAYC,QAAQ,YAAY/D,SAAS,UAAzC,8CASpB,eAACuD,EAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,SAAStP,eAAe,SAAnD,UACI,cAACkP,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAACqE,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIvG,QAASA,EACToF,SAAU,SAACrL,GAAD,OAAWkG,EAAWlG,EAAMyL,OAAOxF,UAC7C/C,KAAK,UACLS,MAAM,YAGdD,MACI,eAAC4E,EAAA,EAAD,CAAYC,QAAQ,YAApB,4BAEI,cAACD,EAAA,EAAD,CAAYC,QAAQ,YAAYkE,UAAWC,IAAMC,GAAG,mBAApD,uCAOhB,cAAC5E,EAAA,EAAD,CAAME,MAAI,EAAV,SACQ,cAAC,IAAD,CACA2E,QAASC,IAAOC,gBAChB7M,SAAU,SAAC8M,EAAMC,GAAP,OArUD,SAACD,EAAOC,GAC7CpG,GAAgBmG,GAoUsCE,CAAiCF,WAKtEvC,EAAO3B,QACJ,cAACT,EAAA,EAAD,CAAK8E,GAAI,EAAT,SACI,cAAC1B,EAAA,EAAD,CAAgBnB,OAAK,EAArB,SAAuBG,EAAO3B,WAItC,cAACT,EAAA,EAAD,CAAK8E,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,kBAAgB,EAChBC,SAAU3C,EACVI,WAAS,EACTwC,KAAK,QACL9D,KAAK,SACLlB,QAAQ,YACR5E,MAAM,YAPV,oC,UChWjB6J,UAxEE,WACb,IAAMxW,EAAQyW,cACRC,EAAc/H,YAAc3O,EAAMe,YAAYC,KAAK,OACnDoP,EAAWC,cAEjB,OACI,cAACvQ,EAAA,EAAD,UACI,eAACiR,EAAA,EAAD,CAAMC,WAAS,EAACpP,UAAU,SAASC,eAAe,WAAW8U,GAAI,CAAEnW,UAAW,SAA9E,UACI,cAACuQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACH,EAAA,EAAD,CAAMC,WAAS,EAACnP,eAAe,SAASsP,WAAW,SAASwF,GAAI,CAAEnW,UAAW,sBAA7E,SACI,cAACuQ,EAAA,EAAD,CAAME,MAAI,EAAC0F,GAAI,CAAEC,EAAG,CAAE1F,GAAI,EAAG2F,GAAI,GAAKxF,GAAI,GAA1C,SACI,cAAChQ,EAAA,EAAD,UACI,eAAC0P,EAAA,EAAD,CAAMC,WAAS,EAAC5P,QAAS,EAAG+P,WAAW,SAAStP,eAAe,SAA/D,UACI,cAACkP,EAAA,EAAD,CAAME,MAAI,EAAC0F,GAAI,CAAEtF,GAAI,GAArB,SACI,cAAC,IAAD,CAAYsE,GAAG,IAAf,SACI,cAACmB,EAAA,EAAD,QAGR,cAAC/F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACH,EAAA,EAAD,CACIC,WAAS,EACTpP,UAAW8U,EAAc,iBAAmB,MAC5CvF,WAAW,SACXtP,eAAe,SAJnB,SAMI,cAACkP,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,eAAC8F,EAAA,EAAD,CAAO5F,WAAW,SAAStP,eAAe,SAAST,QAAS,EAA5D,UACI,cAACkQ,EAAA,EAAD,CACI3E,MAAO3M,EAAME,QAAQ8W,UAAUrJ,KAC/BsJ,cAAY,EACZ1F,QAASmF,EAAc,KAAO,KAHlC,qBAOA,cAACpF,EAAA,EAAD,CAAYC,QAAQ,UAAU/D,SAAS,OAAO0J,UAAWR,EAAc,SAAW,GAAlF,yDAOhB,cAAC3F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,MAEJ,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACiG,EAAA,EAAD,MAEJ,cAACpG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACH,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACpP,UAAU,SAASuP,WAAW,SAASD,GAAI,GAAhE,SACI,cAACI,EAAA,EAAD,CACImE,UAAW2B,IACXzB,GAAI,SAAWvF,EAAS6C,OACxB1B,QAAQ,YACRoF,GAAI,CAAEU,eAAgB,QAJ1B,6CAe5B,cAACtG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIyF,GAAI,CAAEC,EAAG,EAAGV,GAAI,GAAnC,SACI,cAACvU,GAAA,EAAD","file":"static/js/7.bb615eaa.chunk.js","sourcesContent":["// material-ui\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// project import\r\nimport MainCard from './../../../ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(5) + ' !important',\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: theme.spacing(3) + ' !important'\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Link, Typography, Stack } from '@material-ui/core';\r\n\r\n//-----------------------|| FOOTER - AUTHENTICATION 2 & 3 ||-----------------------//\r\n\r\nconst AuthFooter = () => {\r\n    return (\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            {/*}<Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\">\r\n                berrydashboard.io\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\">\r\n                &copy; codedthemes.com\r\n            </Typography>{*/}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default AuthFooter;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar _require = require(\"./utils.js\"),\n    generateQuery = _require.generateQuery; // Create script to init hCaptcha\n\n\nvar onLoadListeners = [];\nvar apiScriptRequested = false; // Generate hCaptcha API Script\n\nvar mountCaptchaScript = function mountCaptchaScript() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  apiScriptRequested = true; // Create global onload callback\n\n  window.hcaptchaOnLoad = function () {\n    // Iterate over onload listeners, call each listener\n    onLoadListeners = onLoadListeners.filter(function (listener) {\n      listener();\n      return false;\n    });\n  };\n\n  var domain = params.apihost || \"https://js.hcaptcha.com\";\n  delete params.apihost;\n  var script = document.createElement(\"script\");\n  script.src = \"\".concat(domain, \"/1/api.js?render=explicit&onload=hcaptchaOnLoad\");\n  script.async = true;\n  var query = generateQuery(params);\n  script.src += query !== \"\" ? \"&\".concat(query) : \"\";\n  document.head.appendChild(script);\n};\n\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(HCaptcha, _React$Component);\n\n  var _super = _createSuper(HCaptcha);\n\n  function HCaptcha(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, HCaptcha);\n    _this = _super.call(this, props); // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.isReady = _this.isReady.bind((0, _assertThisInitialized2[\"default\"])(_this)); // Event Handlers\n\n    _this.handleOnLoad = _this.handleOnLoad.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleExpire = _this.handleExpire.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleError = _this.handleError.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleOpen = _this.handleOpen.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleClose = _this.handleClose.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    var isApiReady = typeof hcaptcha !== 'undefined';\n    _this.ref = React.createRef();\n    _this.state = {\n      isApiReady: isApiReady,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(HCaptcha, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //Once captcha is mounted intialize hCaptcha - hCaptcha\n      var _this$props = this.props,\n          apihost = _this$props.apihost,\n          assethost = _this$props.assethost,\n          endpoint = _this$props.endpoint,\n          host = _this$props.host,\n          imghost = _this$props.imghost,\n          hl = _this$props.languageOverride,\n          reCaptchaCompat = _this$props.reCaptchaCompat,\n          reportapi = _this$props.reportapi,\n          sentry = _this$props.sentry,\n          custom = _this$props.custom;\n      var isApiReady = this.state.isApiReady;\n\n      if (!isApiReady) {\n        //Check if hCaptcha has already been loaded, if not create script tag and wait to render captcha\n        if (!apiScriptRequested) {\n          // Only create the script tag once, use a global variable to track\n          mountCaptchaScript({\n            apihost: apihost,\n            assethost: assethost,\n            endpoint: endpoint,\n            hl: hl,\n            host: host,\n            imghost: imghost,\n            recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n            reportapi: reportapi,\n            sentry: sentry,\n            custom: custom\n          });\n        } // Add onload callback to global onload listeners\n\n\n        onLoadListeners.push(this.handleOnLoad);\n      } else {\n        this.renderCaptcha();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      } // Reset any stored variables / timers when unmounting\n\n\n      hcaptcha.reset(captchaId);\n      hcaptcha.remove(captchaId);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // Prevent component re-rendering when these internal state variables are updated\n      if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      // Prop Keys that could change\n      var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n      var match = keys.every(function (key) {\n        return prevProps[key] === _this2.props[key];\n      }); // If they have changed, remove current captcha and render a new one\n\n      if (!match) {\n        this.removeCaptcha(function () {\n          _this2.renderCaptcha();\n        });\n      }\n    }\n  }, {\n    key: \"renderCaptcha\",\n    value: function renderCaptcha(onReady) {\n      var isApiReady = this.state.isApiReady;\n      if (!isApiReady) return;\n      var renderParams = Object.assign({\n        \"open-callback\": this.handleOpen,\n        \"close-callback\": this.handleClose,\n        \"error-callback\": this.handleError,\n        \"chalexpired-callback\": this.handleChallengeExpired,\n        \"expired-callback\": this.handleExpire,\n        \"callback\": this.handleSubmit\n      }, this.props, {\n        hl: this.props.hl || this.props.languageOverride,\n        languageOverride: undefined\n      }); //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n      var captchaId = hcaptcha.render(this.ref.current, renderParams);\n      this.setState({\n        isRemoved: false,\n        captchaId: captchaId\n      }, function () {\n        onReady && onReady();\n      });\n    }\n  }, {\n    key: \"resetCaptcha\",\n    value: function resetCaptcha() {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      } // Reset captcha state, removes stored token and unticks checkbox\n\n\n      hcaptcha.reset(captchaId);\n    }\n  }, {\n    key: \"removeCaptcha\",\n    value: function removeCaptcha(callback) {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      this.setState({\n        isRemoved: true\n      }, function () {\n        hcaptcha.remove(captchaId);\n        callback && callback();\n      });\n    }\n  }, {\n    key: \"handleOnLoad\",\n    value: function handleOnLoad() {\n      var _this3 = this;\n\n      this.setState({\n        isApiReady: true\n      }, function () {\n        // render captcha and wait for captcha id\n        _this3.renderCaptcha(function () {\n          // trigger onLoad if it exists\n          var onLoad = _this3.props.onLoad;\n          if (onLoad) onLoad();\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var onVerify = this.props.onVerify;\n      var _this$state = this.state,\n          isRemoved = _this$state.isRemoved,\n          captchaId = _this$state.captchaId;\n      if (typeof hcaptcha === 'undefined' || isRemoved) return;\n      var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n      var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n      onVerify(token, ekey); //Dispatch event to verify user response\n    }\n  }, {\n    key: \"handleExpire\",\n    value: function handleExpire() {\n      var onExpire = this.props.onExpire;\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n      if (onExpire) onExpire();\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(event) {\n      var onError = this.props.onError;\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n      if (onError) onError(event);\n    }\n  }, {\n    key: \"isReady\",\n    value: function isReady() {\n      var _this$state2 = this.state,\n          isApiReady = _this$state2.isApiReady,\n          isRemoved = _this$state2.isRemoved;\n      return isApiReady && !isRemoved;\n    }\n  }, {\n    key: \"handleOpen\",\n    value: function handleOpen() {\n      if (!this.isReady() || !this.props.onOpen) {\n        return;\n      }\n\n      this.props.onOpen();\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      if (!this.isReady() || !this.props.onClose) {\n        return;\n      }\n\n      this.props.onClose();\n    }\n  }, {\n    key: \"handleChallengeExpired\",\n    value: function handleChallengeExpired() {\n      if (!this.isReady() || !this.props.onChalExpired) {\n        return;\n      }\n\n      this.props.onChalExpired();\n    }\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      if (opts && (0, _typeof2[\"default\"])(opts) !== \"object\") {\n        opts = null;\n      }\n\n      return hcaptcha.execute(captchaId, opts);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var elementId = this.state.elementId;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.ref,\n        id: elementId\n      });\n    }\n  }]);\n  return HCaptcha;\n}(React.Component);\n\nmodule.exports = HCaptcha;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nfunction generateQuery(params) {\n  return Object.entries(params).filter(function (_ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return value || value === false;\n  }).map(function (_ref3) {\n    var _ref4 = (0, _slicedToArray2[\"default\"])(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n  }).join(\"&\");\n}\n\n;\nmodule.exports = {\n  generateQuery: generateQuery\n};","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from '../assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (value) => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n};\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (value) => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n};\r\n\r\n// has special chars\r\nconst hasSpecial = (value) => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n};\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (value) => {\r\n    let strengths = 0;\r\n    if (value.length > 5) strengths++;\r\n    if (value.length > 7) strengths++;\r\n    if (hasNumber(value)) strengths++;\r\n    if (hasSpecial(value)) strengths++;\r\n    if (hasMixed(value)) strengths++;\r\n    return strengths;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";","import React, { useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// material-ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport config from '../../../../config';\nimport useAuth from '../../../../hooks/useAuth';\nimport useColor from '../../../../hooks/useColors';\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Google from './../../../../assets/images/icons/social-google.svg';\nimport AnimateButton from '../../../../ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from '../../../../utils/password-strength';\nimport { SNACKBAR_OPEN } from '../../../../store/actions';\nimport queryString from 'query-string';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport HCaptcha from '@hcaptcha/react-hcaptcha';\n\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor:\n            theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 + ' !important' : theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//===========================|| FIREBASE - REGISTER ||===========================//\n\nconst JWTRegister = ({ ...others }) => {\n    const classes = useStyles();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n    const { colors } = useColor();\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState('');\n    const [passwordMatch, setPasswordMatch] = React.useState(0);\n    const [ captchaToken, setCaptchaToken ] = React.useState(null);\n    const { register, sendVerificationEmail } = useAuth();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleCaptchaVerificationSuccess = (token, ekey) => {\n        setCaptchaToken(token);\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n    \n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    const checkPasswordConfirm = (pass1, pass2) => {\n        if (passwordMatch !== 0 || pass2.length >= pass1.length) {\n            if (pass1 == pass2)\n                setPasswordMatch(true);\n            else \n                setPasswordMatch(false);\n        }   \n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                {/*<Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth={true}\n                            className={classes.redButton}\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"contained\"\n                        >\n                            <img src={Google} alt=\"google\" width=\"20px\" sx={{ mr: { xs: 1, sm: 2 } }} className={classes.loginIcon} /> Sign\n                            up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <AnimateButton>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.signText}\n                                sx={{ borderRadius: customization.borderRadius + 'px' }}\n                                disableRipple\n                                disabled\n                            >\n                                OR\n                            </Button>\n                        </AnimateButton>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                */}\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n                {/*} initialValues={{\n                    username: 'aaaaaa',\n                    email: 'aaa@aaa.at',\n                    password: 'Qayqay123',\n                    submit: null\n                }} {*/}\n            <Formik\n                \n                initialValues={{\n                    username: '',\n                    email: '',\n                    password: '',\n                    passwordConfirm: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    username: Yup.string().max(24).required('Username is required'),\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required'),\n                  \n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (!checked)\n                            return dispatch({ type: SNACKBAR_OPEN, open: true, message:  'T&S need to be accepted.',\n                                variant: 'alert', alertSeverity: 'error', close: true });\n\n                        const newUserCredential = await register(values.username, values.email, values.password, captchaToken);\n\n                        //await sendVerificationEmail(values.username, values.email);\n                        //await newUserCredential.user.sendEmailVerification();\n                        history.push(queryString.parse(location.search).fromLocation);\n\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.response.data.message || err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.username && errors.username)}\n                            className={classes.loginInput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"username\"\n                                value={values.username}\n                                name=\"username\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.username && errors.username && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.username}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginInput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginInput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                    checkPasswordConfirm(e.target.value, values.passwordConfirm);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        \n                        {strength !== 0 && values.password != '' && (\n                            <FormControl fullWidth>\n                                <Box mb={2}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box width={85} height={8} borderRadius={7} backgroundColor={level.color}></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginInput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password confirm</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.passwordConfirm}\n                                name=\"passwordConfirm\"\n                                label=\"Password confirm\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    checkPasswordConfirm(values.password, e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {passwordMatch === false && (\n                            <FormControl fullWidth>\n                                <Box mb={2}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box width={85} height={8} borderRadius={7} backgroundColor={colors.errorDark}></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                Passwords do not match.\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"center\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"/termsAndService\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                            <Grid item>                         \n                                    <HCaptcha\n                                    sitekey={config.hCaptchaSiteKey}\n                                    onVerify={(token,ekey) => handleCaptchaVerificationSuccess(token, ekey)}\n                                    />\n                            </Grid>\n                        </Grid>\n\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default JWTRegister;\n","import React from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './AuthWrapper1';\nimport AuthCardWrapper from './AuthCardWrapper';\nimport Logo from './../../../ui-component/Logo';\nimport JWTRegister from './jwt-forms/JWTRegister';\nimport AuthFooter from './../../../ui-component/cards/AuthFooter';\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n    const location = useLocation();\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <JWTRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to={'/login' + location.search}\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}